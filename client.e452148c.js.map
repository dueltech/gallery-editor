{"version":3,"sources":["../../node_modules/json5/dist/index.js","../../node_modules/chroma-js/chroma.js","components/layoutRule.js","components/layoutStyle.js","utils/generateConfig.js","utils/importConfig.js","utils/createSnippet.js","index.js"],"names":["global","factory","exports","module","define","amd","JSON5","createCommonjsModule","fn","_global","window","Math","self","Function","__g","_core","core","version","__e","_isObject","it","_anObject","TypeError","_fails","exec","e","_descriptors","Object","defineProperty","get","a","document","is","createElement","_ie8DomDefine","dP","_objectDp","f","O","P","Attributes","S","val","toString","call","valueOf","_toPrimitive","value","_hide","object","key","bitmap","enumerable","configurable","writable","_propertyDesc","hasOwnProperty","_has","id","px","random","_functionToString","SHARED","store","undefined","push","mode","copyright","_shared","_redefine","SRC","concat","TPL","split","inspectSource","safe","isFunction","join","String","prototype","_ctx","that","length","_aFunction","b","c","apply","arguments","$export","type","name","source","IS_FORCED","own","out","exp","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","target","expProto","U","W","R","_export","TO_STRING","ceil","floor","_toInteger","isNaN","$at","pos","s","_defined","i","l","charCodeAt","charAt","slice","codePointAt","max","min","fromCharCode","$fromCodePoint","fromCodePoint","x","aLen","arguments$1","code","index","res","_toAbsoluteIndex","RangeError","parseState","stack","line","column","token","root","lexState","buffer","doubleQuote","sign","unicode","Space_Separator","ID_Start","ID_Continue","util","isSpaceSeparator","test","isIdStartChar","isIdContinueChar","isDigit","isHexDigit","lex","peek","lexStates","read","default","newToken","comment","invalidChar","multiLineComment","multiLineCommentAsterisk","singleLineComment","literal","Infinity","NaN","identifierNameStartEscape","u","unicodeEscape","invalidIdentifier","identifierName","identifierNameEscape","zero","decimalInteger","Number","decimalPointLeading","decimalPoint","decimalFraction","decimalExponent","decimalExponentSign","decimalExponentInteger","hexadecimal","hexadecimalInteger","string","escape","hexEscape","parseInt","separatorChar","console","warn","formatChar","start","beforePropertyName","afterPropertyName","beforePropertyValue","afterPropertyValue","beforeArrayValue","afterArrayValue","end","list","p","count","parseStates","invalidEOF","pop","parent","Array","isArray","current","syntaxError","replacements","hexString","substring","message","err","SyntaxError","lineNumber","columnNumber","es5","parse","text","reviver","internalize","holder","replacement","stringify","replacer","space","propertyList","replacerFunc","quote","indent","gap","v","item","indexOf","serializeProperty","substr","toJSON5","toJSON","Boolean","quoteString","serializeArray","stepback","partial","final","propertyString","properties","separator","properties$1","serializeObject","keys","member","serializeKey","quotes","product","quoteChar","reduce","replace","RegExp","firstChar","style","mediaQuery","rows","columns","wrapper","className","innerHTML","buttonRemove","innerText","addEventListener","parentNode","remove","appendChild","selectedString","config","identifierType","getElementById","shortId","productSku","displayedEntries","includeEntryValues","includes","countInput","querySelector","checked","campaignOnly","sort","sortControls","from","querySelectorAll","filter","checkbox","map","sortDisplay","displayMin","forEach","color","inputEl","option","mapLayoutRules","tabContent","props","childNodes","child","rule","prop","input","getLayoutRules","tabContents","getTabContent","layoutStyle","find","dataset","allStyles","el","rules","mapped","layoutRules","layoutStyles","layoutStyleRules","styleRule","identifierTypes","Error","entryValues","entryValue","defaultValue","tabs","tab","layoutStyleValue","entries","ruleSet","dev","configString","json5","snippet","trim","updateGalleryIdControls","select","showable","children","show","toShow","selectedOptions","classList","toggle","watchColorPicker","textField","colorField","watchEntriesSelect","showCountFor","updateDisplay","checkTabs","tabsContainer","add","watchTabNavigation","tabButtons","tabButton","updateLayoutDisplays","onChange","inputWrapper","watchLayoutSelect","addImportListeners","importModal","display","closeButton","errorContainer","matchSnippet","match","log","error","updateConfig","language","getElementsByName","configContainer","DUEL_DEV_LOADER","JSON","showPreview","loader","DuelVision","load","data","marker","ready","init","picker","activeTab","radioButton","buttonId","button"],"mappings":";;;AAAA,IAAA,EAAA,EAAA,UAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,IAAC,SAAUA,EAAQC,GACC,YAAZC,oBAAAA,QAAAA,YAAAA,EAAAA,WAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,GAAyBA,EAAOC,IAAMD,EAAOH,GACnDD,EAAOM,MAAQL,IAHhB,CAIC,KAAO,WAAc,aAEbM,SAAAA,EAAqBC,EAAIL,GAC1BA,OAA0BK,EAA1BL,EAAS,CAAED,QAAS,IAAiBC,EAAOD,SAAUC,EAAOD,QAGjEO,IAAAA,EAAUF,EAAqB,SAAUJ,GAEzCH,IAAAA,EAASG,EAAOD,QAA2B,oBAAVQ,QAAyBA,OAAOC,MAAQA,KACzED,OAAwB,oBAARE,MAAuBA,KAAKD,MAAQA,KAAOC,KAE3DC,SAAS,cAATA,GACc,iBAAPC,MAAmBA,IAAMd,KAGhCe,EAAQR,EAAqB,SAAUJ,GACvCa,IAAAA,EAAOb,EAAOD,QAAU,CAAEe,QAAS,SACrB,iBAAPC,MAAmBA,IAAMF,KAIhCG,GAFUJ,EAAME,QAEJ,SAAUG,GACjB,MAAc,WAAd,EAAOA,GAAyB,OAAPA,EAA4B,mBAAPA,IAGnDC,EAAY,SAAUD,GACpB,IAACD,EAAUC,GAAaE,MAAAA,UAAUF,EAAK,sBACpCA,OAAAA,GAGLG,EAAS,SAAUC,GACjB,IACK,QAAEA,IACT,MAAOC,GACA,OAAA,IAKPC,GAAgBH,EAAO,WAClBI,OAAwE,GAAxEA,OAAOC,eAAe,GAAI,IAAK,CAAEC,IAAK,WAAqB,OAAA,KAAQC,IAGxEC,EAAWtB,EAAQsB,SAEnBC,EAAKb,EAAUY,IAAaZ,EAAUY,EAASE,eAK/CC,GAAiBR,IAAiBH,EAAO,WACpCI,OAAuF,GAAvFA,OAAOC,gBALWR,EAKe,MAJjCY,EAAKD,EAASE,cAAcb,GAAM,IAIO,IAAK,CAAES,IAAK,WAAqB,OAAA,KAAQC,EAL1E,IAAUV,IAqBvBe,EAAKR,OAAOC,eAcZQ,EAAY,CACfC,EAbOX,EAAeC,OAAOC,eAAiB,SAAwBU,EAAGC,EAAGC,GAIvEN,GAHJb,EAAUiB,GACVC,EAbiB,SAAUnB,EAAIqB,GAC3B,IAACtB,EAAUC,GAAcA,OAAAA,EACzBZ,IAAAA,EAAIkC,EACJD,GAAAA,GAAkC,mBAArBjC,EAAKY,EAAGuB,YAA4BxB,EAAUuB,EAAMlC,EAAGoC,KAAKxB,IAAesB,OAAAA,EACxF,GAA4B,mBAApBlC,EAAKY,EAAGyB,WAA2B1B,EAAUuB,EAAMlC,EAAGoC,KAAKxB,IAAesB,OAAAA,EAClF,IAACD,GAAkC,mBAArBjC,EAAKY,EAAGuB,YAA4BxB,EAAUuB,EAAMlC,EAAGoC,KAAKxB,IAAesB,OAAAA,EACvFpB,MAAAA,UAAU,2CAOZwB,CAAaP,GAAG,GACpBlB,EAAUmB,GACNN,EAAqB,IAChBC,OAAAA,EAAGG,EAAGC,EAAGC,GAChB,MAAOf,IACL,GAAA,QAASe,GAAc,QAASA,EAAoBlB,MAAAA,UAAU,4BAE3DgB,MADH,UAAWE,IAAcF,EAAEC,GAAKC,EAAWO,OACxCT,IAgBLU,EAAQtB,EAAe,SAAUuB,EAAQC,EAAKH,GACzCX,OAAAA,EAAUC,EAAEY,EAAQC,EAVT,SAAUC,EAAQJ,GAC7B,MAAA,CACLK,aAAuB,EAATD,GACdE,eAAyB,EAATF,GAChBG,WAAqB,EAATH,GACZJ,MAAOA,GAKuBQ,CAAc,EAAGR,KAC/C,SAAUE,EAAQC,EAAKH,GAElBE,OADPA,EAAOC,GAAOH,EACPE,GAGLO,EAAiB,GAAGA,eACpBC,EAAO,SAAUrC,EAAI8B,GAChBM,OAAAA,EAAeZ,KAAKxB,EAAI8B,IAG7BQ,EAAK,EACLC,EAAKhD,KAAKiD,SAoBVC,EAbUtD,EAAqB,SAAUJ,GACzC2D,IACAC,EAAQtD,EADC,wBACmBA,EADnB,sBACqC,KAEjDN,EAAOD,QAAU,SAAUgD,EAAKH,GACxBgB,OAAAA,EAAMb,KAASa,EAAMb,QAAiBc,IAAVjB,EAAsBA,EAAQ,MAChE,WAAY,IAAIkB,KAAK,CACtBhD,QAASF,EAAME,QACfiD,KAA0B,SAC1BC,UAAW,0CAIWC,CAAQ,4BAA6BvD,SAAS8B,UAElE0B,EAAY9D,EAAqB,SAAUJ,GAC3CmE,IAtBiBpB,EAsBjBoB,EArBK,UAAUC,YAAeP,KADbd,EAsBN,OArB+B,GAAKA,EAAK,QAASQ,EAAKC,GAAIhB,SAAS,KAwB/E6B,GAAO,GAAKX,GAAmBY,MADnB,YAGhB1D,EAAM2D,cAAgB,SAAUtD,GACvByC,OAAAA,EAAkBjB,KAAKxB,KAG/BjB,EAAOD,QAAU,SAAUoC,EAAGY,EAAKR,EAAKiC,GACnCC,IAAAA,EAA2B,mBAAPlC,EACpBkC,IAAcnB,EAAKf,EAAK,SAAWM,EAAMN,EAAK,OAAQQ,IACtDZ,EAAEY,KAASR,IACXkC,IAAcnB,EAAKf,EAAK4B,IAAQtB,EAAMN,EAAK4B,EAAKhC,EAAEY,GAAO,GAAKZ,EAAEY,GAAOsB,EAAIK,KAAKC,OAAO5B,MACvFZ,IAAM7B,EACR6B,EAAEY,GAAOR,EACCiC,EAGDrC,EAAEY,GACXZ,EAAEY,GAAOR,EAETM,EAAMV,EAAGY,EAAKR,WALPJ,EAAEY,GACTF,EAAMV,EAAGY,EAAKR,OAOf7B,SAASkE,UAvBI,WAuBkB,WACzB,MAAe,mBAAR,MAAsB,KAAKT,IAAQT,EAAkBjB,KAAK,UAWtEoC,EAAO,SAAUxE,EAAIyE,EAAMC,GAEzBD,GATW,SAAU7D,GACrB,GAAa,mBAANA,EAA0BE,MAAAA,UAAUF,EAAK,uBAOpD+D,CAAW3E,QACEwD,IAATiB,EAA6BzE,OAAAA,EACzB0E,OAAAA,GACD,KAAA,EAAU,OAAA,SAAUpD,GAChBtB,OAAAA,EAAGoC,KAAKqC,EAAMnD,IAElB,KAAA,EAAU,OAAA,SAAUA,EAAGsD,GACnB5E,OAAAA,EAAGoC,KAAKqC,EAAMnD,EAAGsD,IAErB,KAAA,EAAU,OAAA,SAAUtD,EAAGsD,EAAGC,GACtB7E,OAAAA,EAAGoC,KAAKqC,EAAMnD,EAAGsD,EAAGC,IAGxB,OAAA,WACE7E,OAAAA,EAAG8E,MAAML,EAAMM,aAMtBC,EAAU,SAAUC,EAAMC,EAAMC,GAC9BC,IAQA1C,EAAK2C,EAAKC,EAAKC,EARfH,EAAYH,EAAOD,EAAQQ,EAC3BC,EAAYR,EAAOD,EAAQU,EAC3BC,EAAYV,EAAOD,EAAQ/C,EAC3B2D,EAAWX,EAAOD,EAAQjD,EAC1B8D,EAAUZ,EAAOD,EAAQc,EACzBC,EAASN,EAAYxF,EAAU0F,EAAY1F,EAAQiF,KAAUjF,EAAQiF,GAAQ,KAAOjF,EAAQiF,IAAS,IAAlB,UACnFxF,EAAU+F,EAAYlF,EAAQA,EAAM2E,KAAU3E,EAAM2E,GAAQ,IAC5Dc,EAAWtG,EAAO,YAAgBA,EAAO,UAAc,IAGtDgD,IAAAA,KADD+C,IAAaN,EAASD,GACdC,EAIVG,IAFAD,GAAOD,GAAaW,QAA0BvC,IAAhBuC,EAAOrD,IAExBqD,EAASZ,GAAQzC,GAE9B6C,EAAMM,GAAWR,EAAMb,EAAKc,EAAKrF,GAAW2F,GAA0B,mBAAPN,EAAoBd,EAAKnE,SAAS+B,KAAMkD,GAAOA,EAE1GS,GAAUlC,EAAUkC,EAAQrD,EAAK4C,EAAKL,EAAOD,EAAQiB,GAErDvG,EAAQgD,IAAQ4C,GAAO9C,EAAM9C,EAASgD,EAAK6C,GAC3CK,GAAYI,EAAStD,IAAQ4C,IAAOU,EAAStD,GAAO4C,IAG5DrF,EAAQO,KAAOD,EAEfyE,EAAQQ,EAAI,EACZR,EAAQU,EAAI,EACZV,EAAQ/C,EAAI,EACZ+C,EAAQjD,EAAI,EACZiD,EAAQc,EAAI,GACZd,EAAQkB,EAAI,GACZlB,EAAQiB,EAAI,GACZjB,EAAQmB,EAAI,IACRC,IAiBsBC,EAjBtBD,EAAUpB,EAGVsB,EAAOnG,KAAKmG,KACZC,EAAQpG,KAAKoG,MACbC,EAAa,SAAU5F,GAClB6F,OAAAA,MAAM7F,GAAMA,GAAM,GAAKA,EAAK,EAAI2F,EAAQD,GAAM1F,IAyBnD8F,GAdsBL,GAcN,EAbX,SAAU5B,EAAMkC,GACjBC,IAGAtF,EAAGsD,EAHHgC,EAAItC,OATG,SAAU1D,GACnBA,GAAM4C,MAAN5C,EAAyBE,MAAAA,UAAU,yBAA2BF,GAC3DA,OAAAA,EAOUiG,CAASpC,IACpBqC,EAAIN,EAAWG,GACfI,EAAIH,EAAElC,OAENoC,OAAAA,EAAI,GAAKA,GAAKC,EAAYV,EAAY,QAAK7C,GAC/ClC,EAAIsF,EAAEI,WAAWF,IACN,OAAUxF,EAAI,OAAUwF,EAAI,IAAMC,IAAMnC,EAAIgC,EAAEI,WAAWF,EAAI,IAAM,OAAUlC,EAAI,MACxFyB,EAAYO,EAAEK,OAAOH,GAAKxF,EAC1B+E,EAAYO,EAAEM,MAAMJ,EAAGA,EAAI,GAA2BlC,EAAI,OAAzBtD,EAAI,OAAU,IAAqB,QAK5E8E,EAAQA,EAAQrE,EAAG,SAAU,CAE3BoF,YAAa,SAAqBR,GACzBD,OAAAA,EAAI,KAAMC,MAIHpG,EAAM+D,OAAO6C,YAA3BA,IAEAC,EAAMjH,KAAKiH,IACXC,EAAMlH,KAAKkH,IAMXC,EAAehD,OAAOgD,aACtBC,EAAiBjD,OAAOkD,cAG5BpB,EAAQA,EAAQnE,EAAImE,EAAQZ,KAAO+B,GAA2C,GAAzBA,EAAe7C,QAAc,SAAU,CAE1F8C,cAAe,SAAuBC,GAO7BC,IANHC,IAKAC,EAjByBC,EAAOnD,EAYhCiD,EAAc5C,UAEd+C,EAAM,GACNJ,EAAO3C,UAAUL,OACjBoC,EAAI,EAEDY,EAAOZ,GAAG,CAEXiB,GADJH,GAAQD,EAAYb,KAnBcpC,EAoBP,UAnB/BmD,EAAQrB,EADuBqB,EAoBND,IAlBV,EAAIR,EAAIS,EAAQnD,EAAQ,GAAK2C,EAAIQ,EAAOnD,MAkBVkD,EAAcI,MAAAA,WAAWJ,EAAO,8BACzEE,EAAIrE,KAAKmE,EAAO,MACZN,EAAaM,GACbN,EAAyC,QAA1BM,GAAQ,QAAY,IAAcA,EAAO,KAAQ,QAE7DE,OAAAA,EAAIzD,KAAK,OAIF9D,EAAM+D,OAAOkD,cAA7BA,IA+CArC,EACA8C,EACAC,EACAvB,EACAwB,EACAC,EACAC,EACA3F,EACA4F,EA+CAC,EACAC,EACAC,EACAC,EACA7D,EAnGA8D,EAAU,CACbC,gBALqB,0CAMrBC,SALc,s7NAMdC,YALiB,s2QAQdC,EAAO,CACPC,iBAAkB,SAA2BnE,GAClC,MAAa,iBAANA,GAAkB8D,EAAQC,gBAAgBK,KAAKpE,IAGjEqE,cAAe,SAAwBrE,GAC5B,MAAa,iBAANA,IACTA,GAAK,KAAOA,GAAK,KACrBA,GAAK,KAAOA,GAAK,KACX,MAANA,GAAqB,MAANA,GAChB8D,EAAQE,SAASI,KAAKpE,KAI1BsE,iBAAkB,SAA2BtE,GAClC,MAAa,iBAANA,IACTA,GAAK,KAAOA,GAAK,KACrBA,GAAK,KAAOA,GAAK,KACjBA,GAAK,KAAOA,GAAK,KACX,MAANA,GAAqB,MAANA,GACT,MAANA,GAA0B,MAANA,GACrB8D,EAAQG,YAAYG,KAAKpE,KAI7BuE,QAAS,SAAkBvE,GAChB,MAAa,iBAANA,GAAkB,QAAQoE,KAAKpE,IAGjDwE,WAAY,SAAqBxE,GACtB,MAAa,iBAANA,GAAkB,cAAcoE,KAAKpE,KAiElDyE,SAAAA,IAMI,IALTf,EAAW,UACXC,EAAS,GACTC,GAAc,EACdC,EAAO,IAEE,CACL7D,EAAI0E,IAOAlB,IAAAA,EAAQmB,EAAUjB,KAClBF,GAAAA,EACOA,OAAAA,GAKVkB,SAAAA,IACDpE,GAAAA,EAAOwB,GACArC,OAAAA,OAAOkD,cAAcrC,EAAOgC,YAAYR,IAI9C8C,SAAAA,IACD5E,IAAAA,EAAI0E,IAeD1E,MAbG,OAANA,GACAsD,IACAC,EAAS,GACFvD,EACPuD,GAAUvD,EAAEH,OAEZ0D,IAGAvD,IACA8B,GAAO9B,EAAEH,QAGNG,EAGP2E,IAAAA,EAAY,CACZE,QAAS,WACG7E,OAAAA,GACH,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,IAAA,SACA,IAAA,KACA,IAAA,KACA,IAAA,SACA,IAAA,SAED,YADA4E,IAGC,IAAA,IAGD,OAFAA,SACAlB,EAAW,WAGV/E,UAAAA,EAEMmG,OADPF,IACOE,EAAS,OAGhBZ,IAAAA,EAAKC,iBAAiBnE,GAUnB2E,OAAAA,EAAUvB,KATbwB,KAYRG,QAAS,WACG/E,OAAAA,GACH,IAAA,IAGD,OAFA4E,SACAlB,EAAW,oBAGV,IAAA,IAGD,OAFAkB,SACAlB,EAAW,qBAITsB,MAAAA,GAAYJ,MAGtBK,iBAAkB,WACNjF,OAAAA,GACH,IAAA,IAGD,OAFA4E,SACAlB,EAAW,4BAGV/E,UAAAA,EACKqG,MAAAA,GAAYJ,KAGtBA,KAGJM,yBAA0B,WACdlF,OAAAA,GACH,IAAA,IAED,YADA4E,IAGC,IAAA,IAGD,OAFAA,SACAlB,EAAW,WAGV/E,UAAAA,EACKqG,MAAAA,GAAYJ,KAGtBA,IACAlB,EAAW,oBAGfyB,kBAAmB,WACPnF,OAAAA,GACH,IAAA,KACA,IAAA,KACA,IAAA,SACA,IAAA,SAGD,OAFA4E,SACAlB,EAAW,WAGV/E,UAAAA,EAEMmG,OADPF,IACOE,EAAS,OAGpBF,KAGJlH,MAAO,WACKsC,OAAAA,GACH,IAAA,IACA,IAAA,IACM8E,OAAAA,EAAS,aAAcF,KAE7B,IAAA,IAGME,OAFPF,IACAQ,EAAQ,OACDN,EAAS,OAAQ,MAEvB,IAAA,IAGMA,OAFPF,IACAQ,EAAQ,OACDN,EAAS,WAAW,GAE1B,IAAA,IAGMA,OAFPF,IACAQ,EAAQ,QACDN,EAAS,WAAW,GAE1B,IAAA,IACA,IAAA,IAMD,MALe,MAAXF,MACAf,GAAQ,QAGZH,EAAW,QAGV,IAAA,IAGD,OAFAC,EAASiB,SACTlB,EAAW,uBAGV,IAAA,IAGD,OAFAC,EAASiB,SACTlB,EAAW,QAGV,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGD,OAFAC,EAASiB,SACTlB,EAAW,kBAGV,IAAA,IAGMoB,OAFPF,IACAQ,EAAQ,WACDN,EAAS,UAAWO,EAAAA,GAE1B,IAAA,IAGMP,OAFPF,IACAQ,EAAQ,MACDN,EAAS,UAAWQ,KAE1B,IAAA,IACA,IAAA,IAID,OAHA1B,EAA0B,MAAXgB,IACfjB,EAAS,QACTD,EAAW,UAITsB,MAAAA,GAAYJ,MAGtBW,0BAA2B,WACnBvF,GAAM,MAANA,EACMgF,MAAAA,GAAYJ,KAGtBA,IACIY,IAAAA,EAAIC,KACAD,OAAAA,GACH,IAAA,IACA,IAAA,IACD,MAEJ,QACQ,IAACtB,EAAKG,cAAcmB,GACdE,MAAAA,KAMd/B,GAAU6B,EACV9B,EAAW,kBAGfiC,eAAgB,WACJ3F,OAAAA,GACH,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAED,YADA2D,GAAUiB,KAGT,IAAA,KAGD,OAFAA,SACAlB,EAAW,wBAIXQ,IAAAA,EAAKI,iBAAiBtE,GAKnB8E,OAAAA,EAAS,aAAcnB,GAJ1BA,GAAUiB,KAOlBgB,qBAAsB,WACd5F,GAAM,MAANA,EACMgF,MAAAA,GAAYJ,KAGtBA,IACIY,IAAAA,EAAIC,KACAD,OAAAA,GACH,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACD,MAEJ,QACQ,IAACtB,EAAKI,iBAAiBkB,GACjBE,MAAAA,KAMd/B,GAAU6B,EACV9B,EAAW,kBAGfG,KAAM,WACM7D,OAAAA,GACH,IAAA,IAGD,OAFA2D,EAASiB,SACTlB,EAAW,uBAGV,IAAA,IAGD,OAFAC,EAASiB,SACTlB,EAAW,QAGV,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGD,OAFAC,EAASiB,SACTlB,EAAW,kBAGV,IAAA,IAGMoB,OAFPF,IACAQ,EAAQ,WACDN,EAAS,UAAWjB,GAAOwB,EAAAA,IAEjC,IAAA,IAGMP,OAFPF,IACAQ,EAAQ,MACDN,EAAS,UAAWQ,KAGzBN,MAAAA,GAAYJ,MAGtBiB,KAAM,WACM7F,OAAAA,GACH,IAAA,IAGD,OAFA2D,GAAUiB,SACVlB,EAAW,gBAGV,IAAA,IACA,IAAA,IAGD,OAFAC,GAAUiB,SACVlB,EAAW,mBAGV,IAAA,IACA,IAAA,IAGD,OAFAC,GAAUiB,SACVlB,EAAW,eAIRoB,OAAAA,EAAS,UAAkB,EAAPjB,IAG/BiC,eAAgB,WACJ9F,OAAAA,GACH,IAAA,IAGD,OAFA2D,GAAUiB,SACVlB,EAAW,gBAGV,IAAA,IACA,IAAA,IAGD,OAFAC,GAAUiB,SACVlB,EAAW,mBAIXQ,IAAAA,EAAKK,QAAQvE,GAKV8E,OAAAA,EAAS,UAAWjB,EAAOkC,OAAOpC,IAJrCA,GAAUiB,KAOlBoB,oBAAqB,WACb9B,GAAAA,EAAKK,QAAQvE,GAGb,OAFA2D,GAAUiB,SACVlB,EAAW,mBAITsB,MAAAA,GAAYJ,MAGtBqB,aAAc,WACFjG,OAAAA,GACH,IAAA,IACA,IAAA,IAGD,OAFA2D,GAAUiB,SACVlB,EAAW,mBAIXQ,OAAAA,EAAKK,QAAQvE,IACb2D,GAAUiB,SACVlB,EAAW,oBAIRoB,EAAS,UAAWjB,EAAOkC,OAAOpC,KAG7CuC,gBAAiB,WACLlG,OAAAA,GACH,IAAA,IACA,IAAA,IAGD,OAFA2D,GAAUiB,SACVlB,EAAW,mBAIXQ,IAAAA,EAAKK,QAAQvE,GAKV8E,OAAAA,EAAS,UAAWjB,EAAOkC,OAAOpC,IAJrCA,GAAUiB,KAOlBuB,gBAAiB,WACLnG,OAAAA,GACH,IAAA,IACA,IAAA,IAGD,OAFA2D,GAAUiB,SACVlB,EAAW,uBAIXQ,GAAAA,EAAKK,QAAQvE,GAGb,OAFA2D,GAAUiB,SACVlB,EAAW,0BAITsB,MAAAA,GAAYJ,MAGtBwB,oBAAqB,WACblC,GAAAA,EAAKK,QAAQvE,GAGb,OAFA2D,GAAUiB,SACVlB,EAAW,0BAITsB,MAAAA,GAAYJ,MAGtByB,uBAAwB,WAChBnC,IAAAA,EAAKK,QAAQvE,GAKV8E,OAAAA,EAAS,UAAWjB,EAAOkC,OAAOpC,IAJrCA,GAAUiB,KAOlB0B,YAAa,WACLpC,GAAAA,EAAKM,WAAWxE,GAGhB,OAFA2D,GAAUiB,SACVlB,EAAW,sBAITsB,MAAAA,GAAYJ,MAGtB2B,mBAAoB,WACZrC,IAAAA,EAAKM,WAAWxE,GAKb8E,OAAAA,EAAS,UAAWjB,EAAOkC,OAAOpC,IAJrCA,GAAUiB,KAOlB4B,OAAQ,WACIxG,OAAAA,GACH,IAAA,KAGD,OAFA4E,SACAjB,GA6JH8C,WAEGzG,OADA0E,KAEH,IAAA,IAEM,OADPE,IACO,KAEN,IAAA,IAEM,OADPA,IACO,KAEN,IAAA,IAEM,OADPA,IACO,KAEN,IAAA,IAEM,OADPA,IACO,KAEN,IAAA,IAEM,OADPA,IACO,KAEN,IAAA,IAEM,OADPA,IACO,KAEN,IAAA,IAEGV,GADJU,IACIV,EAAKK,QAAQG,KACPM,MAAAA,GAAYJ,KAGf,MAAA,KAEN,IAAA,IAEM8B,OADP9B,IAuCC8B,WACD/C,IAAAA,EAAS,GACT3D,EAAI0E,IAEJ,IAACR,EAAKM,WAAWxE,GACXgF,MAAAA,GAAYJ,KAMlB,GAHJjB,GAAUiB,IAEV5E,EAAI0E,KACCR,EAAKM,WAAWxE,GACXgF,MAAAA,GAAYJ,KAKfnF,OAFPkE,GAAUiB,IAEHnF,OAAOkD,cAAcgE,SAAShD,EAAQ,KAvDlC+C,GAEN,IAAA,IAEMjB,OADPb,IACOa,KAEN,IAAA,KACA,IAAA,SACA,IAAA,SAEM,OADPb,IACO,GAEN,IAAA,KAMM,OALPA,IACe,OAAXF,KACAE,IAGG,GAEN,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGAjG,UAAAA,EACKqG,MAAAA,GAAYJ,KAGfA,OAAAA,IArOW6B,IAGT,IAAA,IACG7C,OAAAA,GACAgB,IACOE,EAAS,SAAUnB,SAG9BA,GAAUiB,KAGT,IAAA,IACG,OAAChB,OAKLD,GAAUiB,MAJNA,IACOE,EAAS,SAAUnB,IAM7B,IAAA,KACA,IAAA,KACKqB,MAAAA,GAAYJ,KAEjB,IAAA,SACA,IAAA,UA0dJgC,SAAe5G,GACpB6G,QAAQC,KAAM,WAAcC,GAAW/G,GAAM,2DA1drC4G,CAAc5G,GACd,MAECrB,UAAAA,EACKqG,MAAAA,GAAYJ,KAGtBjB,GAAUiB,KAGdoC,MAAO,WACKhH,OAAAA,GACH,IAAA,IACA,IAAA,IACM8E,OAAAA,EAAS,aAAcF,KAOlClB,EAAW,SAGfuD,mBAAoB,WACRjH,OAAAA,GACH,IAAA,IACA,IAAA,IAGD,OAFA2D,EAASiB,SACTlB,EAAW,kBAGV,IAAA,KAGD,OAFAkB,SACAlB,EAAW,6BAGV,IAAA,IACMoB,OAAAA,EAAS,aAAcF,KAE7B,IAAA,IACA,IAAA,IAGD,OAFAhB,EAA0B,MAAXgB,SACflB,EAAW,UAIXQ,GAAAA,EAAKG,cAAcrE,GAGnB,OAFA2D,GAAUiB,SACVlB,EAAW,kBAITsB,MAAAA,GAAYJ,MAGtBsC,kBAAmB,WACXlH,GAAM,MAANA,EACO8E,OAAAA,EAAS,aAAcF,KAG5BI,MAAAA,GAAYJ,MAGtBuC,oBAAqB,WACjBzD,EAAW,SAGf0D,mBAAoB,WACRpH,OAAAA,GACH,IAAA,IACA,IAAA,IACM8E,OAAAA,EAAS,aAAcF,KAG5BI,MAAAA,GAAYJ,MAGtByC,iBAAkB,WACVrH,GAAM,MAANA,EACO8E,OAAAA,EAAS,aAAcF,KAGlClB,EAAW,SAGf4D,gBAAiB,WACLtH,OAAAA,GACH,IAAA,IACA,IAAA,IACM8E,OAAAA,EAAS,aAAcF,KAG5BI,MAAAA,GAAYJ,MAGtB2C,IAAK,WAOKvC,MAAAA,GAAYJ,OAIjBE,SAAAA,EAAU1E,EAAM1C,GACd,MAAA,CACH0C,KAAMA,EACN1C,MAAOA,EACP4F,KAAMA,EACNC,OAAQA,GAIP6B,SAAAA,EAASrD,GACT,IAAA,IAAIE,EAAI,EAAGuF,EAAOzF,EAAGE,EAAIuF,EAAK3H,OAAQoC,GAAK,EAAG,CAC3CjC,IAAAA,EAAIwH,EAAKvF,GAITwF,GAFI/C,MAEE1E,EACAgF,MAAAA,GAAYJ,KAGtBA,KAmGCa,SAAAA,KAIEiC,IAHH/D,IAAAA,EAAS,GACT+D,EAAQ,EAELA,KAAU,GAAG,CACZ1H,IAAAA,EAAI0E,IACJ,IAACR,EAAKM,WAAWxE,GACXgF,MAAAA,GAAYJ,KAGtBjB,GAAUiB,IAGPnF,OAAAA,OAAOkD,cAAcgE,SAAShD,EAAQ,KAG7CgE,IAAAA,GAAc,CACdX,MAAO,WACCxD,GAAe,QAAfA,EAAMpD,KACAwH,MAAAA,KAGVhJ,MAGJqI,mBAAoB,WACRzD,OAAAA,EAAMpD,MACT,IAAA,aACA,IAAA,SAGD,OAFAvC,EAAM2F,EAAM9F,WACZ0F,EAAa,qBAGZ,IAAA,aAOD,YADAyE,KAGC,IAAA,MACKD,MAAAA,OAOdV,kBAAmB,WAMX1D,GAAe,QAAfA,EAAMpD,KACAwH,MAAAA,KAGVxE,EAAa,uBAGjB+D,oBAAqB,WACb3D,GAAe,QAAfA,EAAMpD,KACAwH,MAAAA,KAGVhJ,MAGJyI,iBAAkB,WACV7D,GAAe,QAAfA,EAAMpD,KACAwH,MAAAA,KAGS,eAAfpE,EAAMpD,MAAyC,MAAhBoD,EAAM9F,MAKzCkB,KAJIiJ,MAORT,mBAAoB,WAMZ5D,GAAe,QAAfA,EAAMpD,KACAwH,MAAAA,KAGFpE,OAAAA,EAAM9F,OACT,IAAA,IAED,YADA0F,EAAa,sBAGZ,IAAA,IACDyE,OAORP,gBAAiB,WAMT9D,GAAe,QAAfA,EAAMpD,KACAwH,MAAAA,KAGFpE,OAAAA,EAAM9F,OACT,IAAA,IAED,YADA0F,EAAa,oBAGZ,IAAA,IACDyE,OAORN,IAAK,cAQA3I,SAAAA,KACDlB,IAAAA,EAEI8F,OAAAA,EAAMpD,MACT,IAAA,aACOoD,OAAAA,EAAM9F,OACT,IAAA,IACDA,EAAQ,GACR,MAEC,IAAA,IACDA,EAAQ,GAIZ,MAEC,IAAA,OACA,IAAA,UACA,IAAA,UACA,IAAA,SACDA,EAAQ8F,EAAM9F,MAQd+F,QAAS9E,IAAT8E,EACAA,EAAO/F,MACJ,CACCoK,IAAAA,EAASzE,EAAMA,EAAMxD,OAAS,GAC9BkI,MAAMC,QAAQF,GACdA,EAAOlJ,KAAKlB,GAEZoK,EAAOjK,GAAOH,EAIlBA,GAAU,OAAVA,GAAmC,WAAjB,EAAOA,GACzB2F,EAAMzE,KAAKlB,GAGP0F,EADA2E,MAAMC,QAAQtK,GACD,mBAEA,yBAEd,CACCuK,IAAAA,EAAU5E,EAAMA,EAAMxD,OAAS,GAE/BuD,EADW,MAAX6E,EACa,MACNF,MAAMC,QAAQC,GACR,kBAEA,sBAKhBJ,SAAAA,KACLxE,EAAMwE,MAEFI,IAAAA,EAAU5E,EAAMA,EAAMxD,OAAS,GAE/BuD,EADW,MAAX6E,EACa,MACNF,MAAMC,QAAQC,GACR,kBAEA,qBAcZjD,SAAAA,GAAahF,GACdA,OACOkI,QADDvJ,IAANqB,EACoB,kCAAoCsD,EAAO,IAAMC,EAGrD,6BAAgCwD,GAAW/G,GAAM,QAAUsD,EAAO,IAAMC,GAGvFqE,SAAAA,KACEM,OAAAA,GAAa,kCAAoC5E,EAAO,IAAMC,GAahEmC,SAAAA,KAEEwC,OAAAA,GAAa,0CAA4C5E,EAAO,KADvEC,GAAU,IAQLwD,SAAAA,GAAY/G,GACbmI,IAAAA,EAAe,CACV,IAAA,MACA,IAAA,MACC,KAAA,OACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACI,SAAA,UACA,SAAA,WAGVA,GAAAA,EAAanI,GACNmI,OAAAA,EAAanI,GAGpBA,GAAAA,EAAI,IAAK,CACLoI,IAAAA,EAAYpI,EAAEmC,WAAW,GAAG7E,SAAS,IAClC,MAAA,OAAS,KAAO8K,GAAWC,UAAUD,EAAUvI,QAGnDG,OAAAA,EAGFkI,SAAAA,GAAaI,GACdC,IAAAA,EAAM,IAAIC,YAAYF,GAGnBC,OAFPA,EAAIE,WAAanF,EACjBiF,EAAIG,aAAenF,EACZgF,EAoRJI,MATK,CACRC,MA/zCQ,SAAgBC,EAAMC,GAC9BxI,EAASb,OAAOoJ,GAChBzF,EAAa,QACbC,EAAQ,GACRvB,EAAM,EACNwB,EAAO,EACPC,EAAS,EACTC,OAAQ7E,EACRd,OAAMc,EACN8E,OAAO9E,EAEJ,GACC6E,EAAQiB,IAORkD,GAAYvE,WACQ,QAAfI,EAAMpD,MAEX,MAAmB,mBAAZ0I,EAONC,SAAAA,EAAaC,EAAQ3I,EAAMyI,GAC5BpL,IAAAA,EAAQsL,EAAO3I,GACf3C,GAAS,MAATA,GAAkC,WAAjB,EAAOA,GACnB,IAAA,IAAIG,KAAOH,EAAO,CACfuL,IAAAA,EAAcF,EAAYrL,EAAOG,EAAKiL,QACtBnK,IAAhBsK,SACOvL,EAAMG,GAEbH,EAAMG,GAAOoL,EAKlBH,OAAAA,EAAQvL,KAAKyL,EAAQ3I,EAAM3C,GAnBvBqL,CAAY,CAAKtF,GAAAA,GAAO,GAAIqF,GAGhCrF,GAsyCPyF,UA1QY,SAAoBxL,EAAOyL,EAAUC,GAC7C/F,IAEAgG,EACAC,EAEAC,EALAlG,EAAQ,GACRmG,EAAS,GAGTC,EAAM,GAaN,GATY,MAAZN,GACoB,WAApB,EAAOA,IACNpB,MAAMC,QAAQmB,KAEfC,EAAQD,EAASC,MACjBG,EAAQJ,EAASI,MACjBJ,EAAWA,EAASA,UAGA,mBAAbA,EACPG,EAAeH,OACZ,GAAIpB,MAAMC,QAAQmB,GAAW,CAChCE,EAAe,GACV,IAAA,IAAIpH,EAAI,EAAGuF,EAAO2B,EAAUlH,EAAIuF,EAAK3H,OAAQoC,GAAK,EAAG,CAClDyH,IAAAA,EAAIlC,EAAKvF,GAET0H,OAAQ,EAEK,iBAAND,EACPC,EAAOD,GAEM,iBAANA,GACPA,aAAajK,QACbiK,aAAa3D,UAEb4D,EAAOlK,OAAOiK,SAGL/K,IAATgL,GAAsBN,EAAaO,QAAQD,GAAQ,GACnDN,EAAazK,KAAK+K,IAoBvBE,OAfHT,aAAiBrD,OACjBqD,EAAQrD,OAAOqD,GACRA,aAAiB3J,SACxB2J,EAAQ3J,OAAO2J,IAGE,iBAAVA,EACHA,EAAQ,IACRA,EAAQ9N,KAAKkH,IAAI,GAAIlH,KAAKoG,MAAM0H,IAChCK,EAAM,aAAaK,OAAO,EAAGV,IAET,iBAAVA,IACdK,EAAML,EAAMU,OAAO,EAAG,KAGnBD,EAAkB,GAAI,CAAKnM,GAAAA,IAEzBmM,SAAAA,EAAmBhM,EAAKmL,GACzBtL,IAAAA,EAAQsL,EAAOnL,GAqBXH,OApBK,MAATA,IAC6B,mBAAlBA,EAAMqM,QACbrM,EAAQA,EAAMqM,QAAQlM,GACS,mBAAjBH,EAAMsM,SACpBtM,EAAQA,EAAMsM,OAAOnM,KAIzByL,IACA5L,EAAQ4L,EAAa/L,KAAKyL,EAAQnL,EAAKH,IAGvCA,aAAiBqI,OACjBrI,EAAQqI,OAAOrI,GACRA,aAAiB+B,OACxB/B,EAAQ+B,OAAO/B,GACRA,aAAiBuM,UACxBvM,EAAQA,EAAMF,WAGVE,GACH,KAAA,KAAa,MAAA,OACb,KAAA,EAAa,MAAA,OACb,KAAA,EAAc,MAAA,QAGf,MAAiB,iBAAVA,EACAwM,EAAYxM,GAGF,iBAAVA,EACA+B,OAAO/B,GAGG,WAAjB,EAAOA,GACAqK,MAAMC,QAAQtK,GAmIpByM,SAAgBzM,GACjB2F,GAAAA,EAAMuG,QAAQlM,IAAU,EAClBzB,MAAAA,UAAU,0CAGpBoH,EAAMzE,KAAKlB,GAEP0M,IAAAA,EAAWZ,EACfA,GAAkBC,EAGb,IADDY,IAMAC,EANAD,EAAU,GACLpI,EAAI,EAAGA,EAAIvE,EAAMmC,OAAQoC,IAAK,CAC/BsI,IAAAA,EAAiBV,EAAkBpK,OAAOwC,GAAIvE,GAClD2M,EAAQzL,UAAyBD,IAAnB4L,EAAgCA,EAAiB,QAI/DF,GAAmB,IAAnBA,EAAQxK,OACRyK,EAAQ,UAEJb,GAAQ,KAARA,EAAY,CACRe,IAAAA,EAAaH,EAAQ7K,KAAK,KAC9B8K,EAAQ,IAAME,EAAa,QACxB,CACCC,IAAAA,EAAY,MAAQjB,EACpBkB,EAAeL,EAAQ7K,KAAKiL,GAChCH,EAAQ,MAAQd,EAASkB,EAAe,MAAQN,EAAW,IAM5DE,OAFPjH,EAAMwE,MACN2B,EAASY,EACFE,EAnK2BH,CAAezM,GAkE5CiN,SAAiBjN,GAClB2F,GAAAA,EAAMuG,QAAQlM,IAAU,EAClBzB,MAAAA,UAAU,0CAGpBoH,EAAMzE,KAAKlB,GAEP0M,IAAAA,EAAWZ,EACfA,GAAkBC,EAIb,IAFDmB,IAgBAN,EAIIE,EApBJI,EAAOvB,GAAgB/M,OAAOsO,KAAKlN,GACnC2M,EAAU,GACLpI,EAAI,EAAGuF,EAAOoD,EAAM3I,EAAIuF,EAAK3H,OAAQoC,GAAK,EAAG,CAC9CpE,IAAAA,EAAM2J,EAAKvF,GAEXsI,EAAiBV,EAAkBhM,EAAKH,GACxC6M,QAAmB5L,IAAnB4L,EAA8B,CAC1BM,IAAAA,EAASC,EAAajN,GAAO,IACrB,KAAR4L,IACAoB,GAAU,KAEdA,GAAUN,EACVF,EAAQzL,KAAKiM,IAKjBR,GAAmB,IAAnBA,EAAQxK,OACRyK,EAAQ,UAGJb,GAAQ,KAARA,EACAe,EAAaH,EAAQ7K,KAAK,KAC1B8K,EAAQ,IAAME,EAAa,QACxB,CACCC,IAAAA,EAAY,MAAQjB,EACxBgB,EAAaH,EAAQ7K,KAAKiL,GAC1BH,EAAQ,MAAQd,EAASgB,EAAa,MAAQJ,EAAW,IAM1DE,OAFPjH,EAAMwE,MACN2B,EAASY,EACFE,EA7GmDK,CAAgBjN,QADtE,EAOCwM,SAAAA,EAAaxM,GAuBb,IAtBDqN,IAAAA,EAAS,CACJ,IAAA,GACA,IAAA,IAGL5C,EAAe,CACV,IAAA,MACA,IAAA,MACC,KAAA,OACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACI,SAAA,UACA,SAAA,WAGV6C,EAAU,GAEL/I,EAAI,EAAGA,EAAIvE,EAAMmC,OAAQoC,IAAK,CAC/BjC,IAAAA,EAAItC,EAAMuE,GACNjC,OAAAA,GACH,IAAA,IACA,IAAA,IACD+K,EAAO/K,KACPgL,GAAWhL,EACX,SAEC,IAAA,KACGkE,GAAAA,EAAKK,QAAQ7G,EAAMuE,EAAI,IAAK,CAC5B+I,GAAW,QACX,UAIJ7C,GAAAA,EAAanI,GACbgL,GAAW7C,EAAanI,QAIxBA,GAAAA,EAAI,IAAJA,CACIoI,IAAAA,EAAYpI,EAAEmC,WAAW,GAAG7E,SAAS,IACzC0N,GAAW,OAAS,KAAO5C,GAAWC,UAAUD,EAAUvI,aAI9DmL,GAAWhL,EAGXiL,IAAAA,EAAY1B,GAASjN,OAAOsO,KAAKG,GAAQG,OAAO,SAAUzO,EAAGsD,GAAagL,OAAAA,EAAOtO,GAAKsO,EAAOhL,GAAMtD,EAAIsD,IAIpGkL,OAAAA,GAFPD,EAAUA,EAAQG,QAAQ,IAAIC,OAAOH,EAAW,KAAM9C,EAAa8C,KAEtCA,EAiDxBH,SAAAA,EAAcjN,GACfA,GAAe,IAAfA,EAAIgC,OACGqK,OAAAA,EAAYrM,GAGnBwN,IAAAA,EAAY5L,OAAOkD,cAAc9E,EAAIyE,YAAY,IACjD,IAAC4B,EAAKG,cAAcgH,GACbnB,OAAAA,EAAYrM,GAGlB,IAAA,IAAIoE,EAAIoJ,EAAUxL,OAAQoC,EAAIpE,EAAIgC,OAAQoC,IACvC,IAACiC,EAAKI,iBAAiB7E,OAAOkD,cAAc9E,EAAIyE,YAAYL,KACrDiI,OAAAA,EAAYrM,GAIpBA,OAAAA;;;;AC8hDhB,IAAA,EAAA,EAAA,UAAA,IAhmGA,SAAA,EAAA,GACA,iBAAA,SAAA,oBAAA,OAAA,OAAA,QAAA,IACA,mBAAA,GAAA,EAAA,IAAA,EAAA,GACA,EAAA,OAAA,IAHA,CAIA,KAAA,WAAA,aAyBA,IAvBA,IAAA,EAAA,SAAA,EAAA,EAAA,GAIA,YAHA,IAAA,IAAA,EAAA,QACA,IAAA,IAAA,EAAA,GAEA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAkBA,EAAA,GACA,EAAA,EAAA,EAAA,CAAA,UAAA,SAAA,SAAA,WAAA,QAAA,OAAA,SAAA,YAAA,QAAA,EAAA,EAAA,OAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GAEA,EAAA,WAAA,EAAA,KAAA,EAAA,cAEA,IAAA,EAAA,SAAA,GACA,OAAA,EAAA,OAAA,UAAA,SAAA,KAAA,KAAA,UA2BA,EAAA,KAAA,GAEA,EAAA,CACA,SApDA,SAAA,GACA,EAAA,UAAA,EACA,EAAA,WAAA,EAAA,MAAA,GACA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,UAAA,GACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,MACA,IAAA,IACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAGA,OAAA,GA0CA,MAAA,EACA,KAAA,EACA,OA9BA,SAAA,EAAA,GAIA,YAHA,IAAA,IAAA,EAAA,MAGA,EAAA,QAAA,EAAA,MAAA,UAAA,MAAA,KAAA,GAGA,UAAA,EAAA,EAAA,KAAA,EACA,EAAA,MAAA,IACA,OAAA,SAAA,GAAA,YAAA,IAAA,EAAA,GAAA,KACA,IAAA,SAAA,GAAA,OAAA,EAAA,GAAA,KAIA,EAAA,IAiBA,KAdA,SAAA,GACA,GAAA,EAAA,OAAA,EAAA,OAAA,KACA,IAAA,EAAA,EAAA,OAAA,EACA,MAAA,UAAA,EAAA,EAAA,IAAA,EAAA,GAAA,cACA,MAWA,GAAA,EACA,MAAA,EAAA,EACA,QAAA,EAAA,EACA,QAAA,EAAA,IACA,QAAA,IAAA,GAGA,EAAA,CACA,OAAA,GACA,WAAA,IAGA,EAAA,EAAA,KACA,EAAA,EAAA,SACA,EAAA,EAAA,KAGA,EAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GAAA,WAAA,EAAA,EAAA,KACA,EAAA,GAAA,aACA,EAAA,GAAA,cAAA,KAAA,YAEA,OAAA,EAAA,GAIA,IAAA,EAAA,EAAA,GACA,GAAA,EAEA,IAAA,EAAA,CACA,GAAA,EACA,EAAA,SACA,EAAA,WAAA,EAAA,WAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,IACA,EAAA,QAAA,GAGA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,WAAA,EAAA,EAAA,OAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GAGA,GADA,EAAA,EAAA,KAAA,MAAA,EAAA,GACA,OAIA,IAAA,EAAA,OAAA,GAIA,MAAA,IAAA,MAAA,mBAAA,GAHA,IAAA,EAAA,EAAA,OAAA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GAAA,IA5BA,KA6BA,KAAA,EAAA,GAMA,IAnCA,KAmCA,KAAA,QAnCA,KAmCA,KAAA,KAAA,IAGA,EAAA,UAAA,SAAA,WACA,MAAA,YAAA,EAAA,KAAA,KAAA,KAAA,MACA,IAAA,KAAA,KAAA,KAAA,KAAA,KAGA,IAAA,EAAA,EAEA,EAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,MAAA,CAAA,MAAA,OAAA,MAGA,EAAA,MAAA,EACA,EAAA,QAAA,QAEA,IAAA,EAAA,EAEA,EAAA,EAAA,OACA,EAAA,KAAA,IAqBA,EAnBA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,EAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAIA,EAAA,EAAA,EAHA,GAAA,IAGA,EAFA,GAAA,IACA,GAAA,MAEA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAIA,MAAA,EAHA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,GAAA,EACA,IAKA,EAAA,EAAA,OAqBA,EAnBA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,IAAA,GADA,EAAA,EAAA,EAAA,SACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,OAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GACA,CACA,GAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GACA,GAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GACA,GAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GACA,IAMA,EAAA,EAAA,OACA,EAAA,EAAA,KAIA,EAAA,UAAA,KAAA,WACA,OAAA,EAAA,KAAA,OAGA,EAAA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,YAGA,EAAA,OAAA,KAAA,EAEA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GADA,EAAA,EAAA,EAAA,QACA,UAAA,EAAA,IAAA,IAAA,EAAA,OACA,MAAA,UAKA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,KACA,EAAA,SAAA,GAAA,OAAA,KAAA,MAAA,IAAA,GAAA,KA4BA,EAlBA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,IAAA,MAUA,OATA,EAAA,GAAA,EAAA,EAAA,IAAA,GACA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,IACA,SAAA,GAAA,EAAA,OAAA,GAAA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,QAEA,EAAA,OAAA,EAEA,EAAA,IAAA,EAAA,KAAA,KAAA,KAKA,EAAA,EAAA,OA8CA,EApCA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,IAAA,GADA,EAAA,EAAA,EAAA,SACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,GAAA,IACA,GAAA,IACA,GAAA,IAEA,IAIA,EAAA,EAJA,EAAA,KAAA,IAAA,EAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,EAAA,GAEA,GAAA,EAAA,GAAA,EAgBA,OAbA,IAAA,GACA,EAAA,EACA,EAAA,OAAA,KAEA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAGA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GACA,GAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GACA,GAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAEA,GAAA,IACA,IAAA,GAAA,KACA,EAAA,OAAA,QAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,IACA,CAAA,EAAA,EAAA,IAKA,EAAA,EAAA,OACA,EAAA,EAAA,KAGA,EAAA,KAAA,MA6BA,EAnBA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,IAAA,MACA,MAAA,OAAA,EAAA,OAAA,EAAA,GACA,EAAA,EAAA,GAAA,IAEA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,KACA,SAAA,GAAA,EAAA,OAAA,GAAA,EAAA,GAAA,KACA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EACA,EAAA,QAEA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,GAAA,KAAA,KAAA,MAKA,EAAA,EAAA,OACA,EAAA,KAAA,MA4CA,EA1CA,WAIA,IAHA,IAAA,EAEA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAGA,EAAA,EAAA,EAHA,GADA,EAAA,EAAA,EAAA,QACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,GAAA,IAAA,EACA,EAAA,EAAA,EAAA,IAAA,MACA,CACA,IAAA,EAAA,CAAA,EAAA,EAAA,GACA,EAAA,CAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,IAAA,EAAA,IAAA,GACA,EAAA,GAAA,IAAA,EAAA,IAAA,GACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAEA,EAAA,GAAA,EAEA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAEA,OAAA,EAAA,OAAA,EAEA,CAAA,EAAA,EAAA,EAAA,EAAA,IAEA,CAAA,EAAA,EAAA,EAAA,IAKA,EAAA,kDACA,EAAA,wEACA,EAAA,mFACA,EAAA,yGACA,EAAA,kFACA,EAAA,wGAEA,EAAA,KAAA,MAEA,EAAA,SAAA,GAEA,IAAA,EAEA,GAHA,EAAA,EAAA,cAAA,OAGA,EAAA,OAAA,MACA,IACA,OAAA,EAAA,OAAA,MAAA,GACA,MAAA,IAMA,GAAA,EAAA,EAAA,MAAA,GAAA,CAEA,IADA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,EAAA,GAGA,OADA,EAAA,GAAA,EACA,EAIA,GAAA,EAAA,EAAA,MAAA,GAAA,CAEA,IADA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,EAAA,GAEA,OAAA,EAIA,GAAA,EAAA,EAAA,MAAA,GAAA,CAEA,IADA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,KAAA,EAAA,IAGA,OADA,EAAA,GAAA,EACA,EAIA,GAAA,EAAA,EAAA,MAAA,GAAA,CAEA,IADA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,KAAA,EAAA,IAGA,OADA,EAAA,IAAA,EAAA,GACA,EAIA,GAAA,EAAA,EAAA,MAAA,GAAA,CACA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,IAAA,IACA,EAAA,IAAA,IACA,IAAA,EAAA,EAAA,GAEA,OADA,EAAA,GAAA,EACA,EAIA,GAAA,EAAA,EAAA,MAAA,GAAA,CACA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,IAAA,IACA,EAAA,IAAA,IACA,IAAA,EAAA,EAAA,GAEA,OADA,EAAA,IAAA,EAAA,GACA,IAIA,EAAA,KAAA,SAAA,GACA,OAAA,EAAA,KAAA,IACA,EAAA,KAAA,IACA,EAAA,KAAA,IACA,EAAA,KAAA,IACA,EAAA,KAAA,IACA,EAAA,KAAA,IAGA,IAAA,EAAA,EAEA,EAAA,EAAA,KAKA,EAAA,UAAA,IAAA,SAAA,GACA,OAAA,EAAA,KAAA,KAAA,IAGA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,EAEA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,SAAA,GAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EACA,KAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAEA,IAAA,EAAA,QAAA,WAAA,EAAA,IAAA,EAAA,KAAA,GACA,MAAA,SAKA,IAAA,EAAA,EAAA,OAEA,EAAA,OAAA,GAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,EAAA,EAAA,QAIA,OAHA,EAAA,IAAA,IACA,EAAA,IAAA,IACA,EAAA,IAAA,IACA,GAGA,EAAA,GAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,UAGA,EAAA,UAAA,GAAA,WACA,IAAA,EAAA,KAAA,KACA,MAAA,CAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,KAGA,IAAA,EAAA,EAAA,OA4BA,EA1BA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IASA,EATA,EAAA,EAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,GAAA,IAWA,OATA,IAAA,EACA,EAAA,OAAA,KAEA,IAAA,IAAA,GAAA,EAAA,GAAA,GACA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,GACA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IACA,GAAA,IACA,IAAA,GAAA,MAEA,CAAA,EAAA,EAAA,IAKA,EAAA,EAAA,OACA,EAAA,KAAA,MA+CA,EArCA,WAIA,IAHA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAGA,EAAA,EAAA,EAHA,GADA,EAAA,EAAA,EAAA,QACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,GAAA,IACA,IAAA,EAAA,IAAA,EACA,GAAA,IAAA,EACA,EAAA,EAAA,EAAA,MACA,CACA,MAAA,IAAA,EAAA,GACA,EAAA,MAAA,GAAA,KACA,EAAA,IAAA,GAAA,KAEA,IAAA,EAAA,EADA,GAAA,IAEA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,OAAA,GACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAGA,MAAA,CAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAKA,EAAA,EAAA,OACA,EAAA,EAAA,KAOA,EAAA,UAAA,IAAA,WACA,OAAA,EAAA,KAAA,OAGA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,EAEA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GADA,EAAA,EAAA,EAAA,OACA,UAAA,EAAA,IAAA,IAAA,EAAA,OACA,MAAA,SAKA,IAAA,GAAA,EAAA,OACA,GAAA,EAAA,KACA,GAAA,KAAA,MA+BA,GA7BA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,GAAA,EAAA,QACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,IAAA,YACA,IAAA,IAAA,EAAA,GACA,SAAA,IACA,EAAA,EAAA,EAAA,OAAA,OAKA,IACA,EAAA,WAJA,EAAA,GAAA,KAGA,IAFA,EAAA,GAAA,KAEA,GADA,EAAA,GAAA,KAEA,SAAA,IACA,EAAA,EAAA,OAAA,EAAA,OAAA,GACA,IAAA,EAAA,IAAA,GAAA,IAAA,GAAA,SAAA,IAEA,OADA,EAAA,EAAA,OAAA,EAAA,OAAA,GACA,EAAA,eACA,IAAA,OAAA,MAAA,IAAA,EAAA,EACA,IAAA,OAAA,MAAA,IAAA,EAAA,EACA,QAAA,MAAA,IAAA,IAMA,GAAA,sCACA,GAAA,sCA8CA,GA5CA,SAAA,GACA,GAAA,EAAA,MAAA,IAAA,CAEA,IAAA,EAAA,QAAA,IAAA,EAAA,SACA,EAAA,EAAA,OAAA,IAGA,IAAA,EAAA,SAEA,GADA,EAAA,EAAA,MAAA,KACA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAEA,IAAA,EAAA,SAAA,EAAA,IAIA,MAAA,CAHA,GAAA,GACA,GAAA,EAAA,IACA,IAAA,EACA,GAIA,GAAA,EAAA,MAAA,IAAA,CACA,IAAA,EAAA,QAAA,IAAA,EAAA,SAEA,EAAA,EAAA,OAAA,IAGA,IAAA,EAAA,SAEA,GADA,EAAA,EAAA,MAAA,KACA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAEA,IAAA,EAAA,SAAA,EAAA,IAKA,MAAA,CAJA,GAAA,GAAA,IACA,GAAA,GAAA,IACA,GAAA,EAAA,IACA,KAAA,OAAA,IAAA,GAAA,IAAA,KAAA,KAQA,MAAA,IAAA,MAAA,sBAAA,IAKA,GAAA,EAAA,KAKA,EAAA,UAAA,IAAA,SAAA,GACA,OAAA,GAAA,KAAA,KAAA,IAGA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,GACA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,SAAA,GAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EACA,KAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAEA,IAAA,EAAA,QAAA,WAAA,GAAA,IAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,QAAA,EAAA,SAAA,EACA,MAAA,SAKA,IAAA,GAAA,EAAA,OACA,GAAA,EAAA,MACA,GAAA,KAAA,IACA,GAAA,KAAA,KACA,GAAA,KAAA,KAmCA,GAjCA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAMA,IAOA,EAPA,EAAA,GAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAKA,EAAA,GAJA,GAAA,IACA,GAAA,IACA,GAAA,KAGA,GAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAYA,OAXA,IAAA,EACA,EAAA,KAEA,GAAA,EAAA,GAAA,EAAA,IAAA,EACA,GAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IACA,EAAA,GAAA,GACA,EAAA,IACA,EAAA,GAAA,GAEA,GAAA,IAEA,CAAA,IAAA,EAAA,EAAA,IAKA,GAAA,EAAA,OACA,GAAA,EAAA,MACA,GAAA,EAAA,MACA,GAAA,EAAA,QACA,GAAA,KAAA,IAgDA,GAzCA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAOA,IAGA,EAAA,EAAA,EAHA,GADA,EAAA,GAAA,EAAA,QACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GA2BA,OAxBA,MAAA,KAAA,EAAA,GACA,MAAA,KAAA,EAAA,GAEA,EAAA,MAAA,GAAA,KACA,EAAA,IAAA,GAAA,MACA,GAAA,KACA,EAAA,EAGA,EAAA,IAFA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAEA,EAAA,EAAA,EAIA,EAAA,IAFA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,EAAA,GAAA,IAFA,GAAA,EAAA,IAEA,GAAA,GAAA,GAAA,IAAA,IAMA,EAAA,IAFA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,EAAA,GAAA,IAFA,GAAA,EAAA,IAEA,GAAA,GAAA,GAAA,IAAA,IAMA,CAAA,KAHA,EAAA,GAAA,EAAA,EAAA,IAGA,KAFA,EAAA,GAAA,EAAA,EAAA,IAEA,KADA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,OAAA,EAAA,EAAA,GAAA,IAKA,GAAA,EAAA,OACA,GAAA,EAAA,KAOA,EAAA,UAAA,IAAA,WACA,OAAA,GAAA,KAAA,OAGA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,GAEA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GADA,EAAA,GAAA,EAAA,OACA,UAAA,GAAA,IAAA,IAAA,EAAA,OACA,MAAA,SAKA,IAAA,GAAA,EAAA,OACA,GAAA,EAAA,KAOA,EAAA,UAAA,IAAA,WACA,OAAA,EAAA,KAAA,OAGA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,EAEA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GADA,EAAA,GAAA,EAAA,OACA,UAAA,GAAA,IAAA,IAAA,EAAA,OACA,MAAA,SAKA,IAAA,GAAA,EAAA,OACA,GAAA,KAAA,IACA,GAAA,KAAA,IAmCA,GA3BA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,IAMA,EAAA,EAAA,EANA,GADA,EAAA,GAAA,EAAA,QACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAcA,OAZA,EAAA,EAAA,IACA,IAAA,GACA,EAAA,OAAA,IACA,EAAA,IAEA,EAAA,EAAA,EACA,IAAA,IAAA,GAAA,EAAA,GAAA,GACA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,GACA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IACA,GAAA,IACA,IAAA,GAAA,MAEA,CAAA,EAAA,EAAA,IAKA,GAAA,EAAA,OACA,GAAA,KAAA,MAuCA,GArCA,WAIA,IAHA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAGA,EAAA,EAAA,EAHA,GADA,EAAA,GAAA,EAAA,QACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAGA,GADA,GAAA,IACA,IAAA,EACA,EAAA,EAAA,EAAA,MACA,CACA,MAAA,IAAA,EAAA,GACA,EAAA,MAAA,GAAA,KACA,EAAA,IAAA,GAAA,KAGA,IAAA,EAAA,GAFA,GAAA,IAGA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,IAEA,OAAA,GACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAGA,MAAA,CAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAKA,GAAA,EAAA,OACA,GAAA,EAAA,KAOA,EAAA,UAAA,IAAA,WACA,OAAA,GAAA,KAAA,OAGA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,GAEA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GADA,EAAA,GAAA,EAAA,OACA,UAAA,GAAA,IAAA,IAAA,EAAA,OACA,MAAA,SAKA,IAAA,GAEA,GAFA,GAKA,OALA,GAMA,EANA,GAOA,QAPA,GASA,WATA,GAUA,WAVA,GAWA,UAXA,GAYA,WAGA,GAAA,EAAA,OACA,GAAA,KAAA,IAkBA,GAAA,SAAA,GACA,OAAA,GAAA,MAAA,OAAA,EAAA,MACA,IAAA,EAAA,MAAA,MAAA,MAGA,GAAA,SAAA,GACA,OAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GACA,EAAA,GAAA,IAGA,GAAA,SAAA,EAAA,EAAA,GAOA,OANA,EAAA,GAAA,GACA,EAAA,GAAA,GACA,EAAA,GAAA,GAIA,CAHA,IAAA,SAAA,EAAA,SAAA,EAAA,SAAA,GAAA,IACA,IAAA,SAAA,EAAA,SAAA,EAAA,QAAA,GAAA,IACA,IAAA,SAAA,EAAA,QAAA,EAAA,SAAA,GAAA,MAIA,GApCA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,GAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,EAAA,IAAA,EAAA,GACA,MAAA,CAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,EAFA,EAAA,MA2BA,GAAA,EAAA,OACA,GAAA,KAAA,IAgCA,GAAA,SAAA,GACA,OAAA,KAAA,GAAA,OAAA,MAAA,EAAA,MAAA,GAAA,EAAA,EAAA,KAAA,OAGA,GAAA,SAAA,GACA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAGA,GAjCA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,IAGA,EAAA,EAAA,EAHA,GADA,EAAA,GAAA,EAAA,QACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAeA,OAZA,GAAA,EAAA,IAAA,IACA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IACA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAEA,EAAA,GAAA,GAAA,GACA,EAAA,GAAA,GAAA,GACA,EAAA,GAAA,GAAA,GAMA,CAJA,GAAA,UAAA,EAAA,UAAA,EAAA,SAAA,GACA,IAAA,QAAA,EAAA,UAAA,EAAA,QAAA,GACA,GAAA,SAAA,EAAA,SAAA,EAAA,UAAA,GAEA,EAAA,OAAA,EAAA,EAAA,GAAA,IAaA,GAAA,EAAA,OACA,GAAA,EAAA,KAOA,EAAA,UAAA,IAAA,WACA,OAAA,GAAA,KAAA,OAGA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,GAEA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GADA,EAAA,GAAA,EAAA,OACA,UAAA,GAAA,IAAA,IAAA,EAAA,OACA,MAAA,SAKA,IAAA,GAAA,EAAA,OACA,GAAA,EAAA,QACA,GAAA,KAAA,KACA,GAAA,KAAA,MACA,GAAA,KAAA,MAgBA,GAdA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,GAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,GAAA,GAAA,KAAA,IAEA,OADA,IAAA,GAAA,IAAA,KAAA,EAAA,OAAA,KACA,CAAA,EAAA,EAAA,IAKA,GAAA,EAAA,OAmBA,GAfA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,GAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,EAAA,IAKA,GAAA,EAAA,OACA,GAAA,EAAA,QACA,GAAA,KAAA,IACA,GAAA,KAAA,IAsBA,GApBA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GASA,IAAA,EAAA,GAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAGA,OAFA,MAAA,KAAA,EAAA,GAEA,CAAA,EAAA,GADA,GAAA,IACA,EAAA,GAAA,GAAA,IAKA,GAAA,EAAA,OAuBA,GAnBA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,IAAA,GADA,EAAA,GAAA,EAAA,QACA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GAIA,MAAA,CAHA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,OAAA,EAAA,EAAA,GAAA,IAKA,GAAA,EAAA,OAWA,GARA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,GAAA,EAAA,OAAA,UACA,OAAA,GAAA,WAAA,EAAA,IAKA,GAAA,EAAA,OACA,GAAA,EAAA,KAOA,EAAA,UAAA,IAAA,WAAA,OAAA,GAAA,KAAA,OACA,EAAA,UAAA,IAAA,WAAA,OAAA,GAAA,KAAA,MAAA,WAEA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAEA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,GACA,EAAA,OAAA,IAAA,GAEA,CAAA,MAAA,OAAA,QAAA,SAAA,GAAA,OAAA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GADA,EAAA,GAAA,EAAA,GACA,UAAA,GAAA,IAAA,IAAA,EAAA,OACA,OAAA,OAWA,IA8JA,GA9JA,CACA,UAAA,UACA,aAAA,UACA,KAAA,UACA,WAAA,UACA,MAAA,UACA,MAAA,UACA,OAAA,UACA,MAAA,UACA,eAAA,UACA,KAAA,UACA,WAAA,UACA,MAAA,UACA,UAAA,UACA,UAAA,UACA,WAAA,UACA,UAAA,UACA,MAAA,UACA,WAAA,UACA,eAAA,UACA,SAAA,UACA,QAAA,UACA,KAAA,UACA,SAAA,UACA,SAAA,UACA,cAAA,UACA,SAAA,UACA,UAAA,UACA,SAAA,UACA,UAAA,UACA,YAAA,UACA,eAAA,UACA,WAAA,UACA,WAAA,UACA,QAAA,UACA,WAAA,UACA,aAAA,UACA,cAAA,UACA,cAAA,UACA,cAAA,UACA,cAAA,UACA,WAAA,UACA,SAAA,UACA,YAAA,UACA,QAAA,UACA,QAAA,UACA,WAAA,UACA,UAAA,UACA,YAAA,UACA,YAAA,UACA,QAAA,UACA,UAAA,UACA,WAAA,UACA,KAAA,UACA,UAAA,UACA,KAAA,UACA,MAAA,UACA,YAAA,UACA,KAAA,UACA,SAAA,UACA,QAAA,UACA,UAAA,UACA,OAAA,UACA,MAAA,UACA,MAAA,UACA,WAAA,UACA,SAAA,UACA,cAAA,UACA,UAAA,UACA,aAAA,UACA,UAAA,UACA,WAAA,UACA,UAAA,UACA,eAAA,UACA,qBAAA,UACA,UAAA,UACA,WAAA,UACA,UAAA,UACA,UAAA,UACA,YAAA,UACA,cAAA,UACA,aAAA,UACA,eAAA,UACA,eAAA,UACA,eAAA,UACA,YAAA,UACA,KAAA,UACA,UAAA,UACA,MAAA,UACA,QAAA,UACA,OAAA,UACA,QAAA,UACA,QAAA,UACA,iBAAA,UACA,WAAA,UACA,aAAA,UACA,aAAA,UACA,eAAA,UACA,gBAAA,UACA,kBAAA,UACA,gBAAA,UACA,gBAAA,UACA,aAAA,UACA,UAAA,UACA,UAAA,UACA,SAAA,UACA,YAAA,UACA,KAAA,UACA,QAAA,UACA,MAAA,UACA,UAAA,UACA,OAAA,UACA,UAAA,UACA,OAAA,UACA,cAAA,UACA,UAAA,UACA,cAAA,UACA,cAAA,UACA,WAAA,UACA,UAAA,UACA,KAAA,UACA,KAAA,UACA,KAAA,UACA,WAAA,UACA,OAAA,UACA,QAAA,UACA,QAAA,UACA,cAAA,UACA,IAAA,UACA,UAAA,UACA,UAAA,UACA,YAAA,UACA,OAAA,UACA,WAAA,UACA,SAAA,UACA,SAAA,UACA,OAAA,UACA,OAAA,UACA,QAAA,UACA,UAAA,UACA,UAAA,UACA,UAAA,UACA,KAAA,UACA,YAAA,UACA,UAAA,UACA,IAAA,UACA,KAAA,UACA,QAAA,UACA,OAAA,UACA,UAAA,UACA,OAAA,UACA,MAAA,UACA,MAAA,UACA,WAAA,UACA,OAAA,UACA,YAAA,WAKA,GAAA,EAAA,KAMA,EAAA,UAAA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,KAAA,KAAA,OACA,EAAA,EAAA,EAAA,OAAA,KAAA,IAAA,EAAA,EAAA,OAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GAEA,GAAA,GAAA,KAAA,EAAA,OAAA,EAAA,cAEA,OAAA,GAGA,EAAA,OAAA,MAAA,SAAA,GAEA,GADA,EAAA,EAAA,cACA,GAAA,GAAA,OAAA,GAAA,GAAA,IACA,MAAA,IAAA,MAAA,uBAAA,IAGA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,SAAA,GAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EACA,KAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAEA,IAAA,EAAA,QAAA,WAAA,GAAA,IAAA,GAAA,EAAA,eACA,MAAA,WAKA,IAAA,GAAA,EAAA,OAaA,GAXA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,GAAA,EAAA,OAIA,OAHA,EAAA,IAGA,KAFA,EAAA,IAEA,GADA,EAAA,IAMA,GAAA,EAAA,KAYA,GAVA,SAAA,GACA,GAAA,UAAA,GAAA,IAAA,GAAA,GAAA,GAAA,SAIA,MAAA,CAHA,GAAA,GACA,GAAA,EAAA,IACA,IAAA,EACA,GAEA,MAAA,IAAA,MAAA,sBAAA,IAKA,GAAA,EAAA,KAIA,EAAA,UAAA,IAAA,WACA,OAAA,GAAA,KAAA,OAGA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,GAEA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,GAAA,IAAA,EAAA,QAAA,WAAA,GAAA,EAAA,KAAA,EAAA,IAAA,GAAA,EAAA,IAAA,SACA,MAAA,SAKA,IAAA,GAAA,EAAA,OACA,GAAA,EAAA,KACA,GAAA,KAAA,MAEA,EAAA,UAAA,IAAA,SAAA,GAGA,YAFA,IAAA,IAAA,GAAA,IAEA,IAAA,EAAA,KAAA,KAAA,MAAA,EAAA,GACA,KAAA,KAAA,MAAA,EAAA,GAAA,IAAA,KAGA,EAAA,UAAA,KAAA,SAAA,GAGA,YAFA,IAAA,IAAA,GAAA,GAEA,KAAA,KAAA,MAAA,EAAA,GAAA,IAAA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,KAIA,EAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,WAGA,EAAA,OAAA,IAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAAA,EAAA,GAAA,EAAA,QAEA,YADA,IAAA,EAAA,KAAA,EAAA,GAAA,GACA,GAGA,EAAA,WAAA,KAAA,CACA,EAAA,EACA,KAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAGA,GADA,EAAA,GAAA,EAAA,QACA,UAAA,GAAA,KAAA,IAAA,EAAA,QACA,IAAA,EAAA,QAAA,UAAA,GAAA,EAAA,KAAA,EAAA,IAAA,GAAA,EAAA,IAAA,GACA,MAAA,SAUA,IAAA,GAAA,KAAA,IAiBA,GAfA,SAAA,GACA,IACA,EAAA,EAAA,EADA,EAAA,EAAA,IAWA,OATA,EAAA,IACA,EAAA,IACA,GAAA,mBAAA,oBAAA,EAAA,EAAA,GAAA,mBAAA,GAAA,GACA,EAAA,EAAA,GAAA,EAAA,mBAAA,EAAA,EAAA,IAAA,mBAAA,mBAAA,GAAA,KAEA,EAAA,mBAAA,kBAAA,EAAA,EAAA,IAAA,kBAAA,GAAA,GACA,EAAA,kBAAA,oBAAA,EAAA,EAAA,IAAA,iBAAA,GAAA,GACA,EAAA,KAEA,CAAA,EAAA,EAAA,EAAA,IAWA,GAAA,EAAA,OACA,GAAA,KAAA,MAwBA,GAtBA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAQA,IANA,IAKA,EALA,EAAA,GAAA,EAAA,OACA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,IACA,EAAA,IAGA,EAAA,EAFA,IAEA,CAEA,IAAA,EAAA,GADA,EAAA,IAAA,EAAA,IAEA,EAAA,GAAA,EAAA,IAAA,EAAA,EACA,EAAA,EAEA,EAAA,EAGA,OAAA,GAAA,IAKA,EAAA,UAAA,KACA,EAAA,UAAA,OACA,EAAA,UAAA,YAAA,WACA,OAAA,GAAA,KAAA,OAGA,EAAA,KACA,EAAA,OACA,EAAA,YAAA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,OAAA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,YAGA,EAAA,OAAA,KACA,EAAA,OAAA,OACA,EAAA,OAAA,YAAA,GAEA,IAAA,GAAA,EAAA,KAEA,EAAA,UAAA,MAAA,SAAA,EAAA,GAGA,YAFA,IAAA,IAAA,GAAA,QAEA,IAAA,GAAA,WAAA,GAAA,GACA,GACA,KAAA,KAAA,GAAA,EACA,MAEA,IAAA,EAAA,CAAA,KAAA,KAAA,GAAA,KAAA,KAAA,GAAA,KAAA,KAAA,GAAA,GAAA,OAEA,KAAA,KAAA,IAGA,EAAA,UAAA,QAAA,WACA,OAAA,KAAA,KAAA,WAAA,GAGA,EAAA,UAAA,OAAA,SAAA,QACA,IAAA,IAAA,EAAA,GAEA,IACA,EADA,KACA,MAEA,OADA,EAAA,IAAA,GAAA,EACA,IAAA,EAAA,EAAA,OAAA,MAHA,KAGA,SAAA,IAGA,EAAA,UAAA,SAAA,SAAA,GAGA,YAFA,IAAA,IAAA,EAAA,GAEA,KAAA,QAAA,IAGA,EAAA,UAAA,OAAA,EAAA,UAAA,OACA,EAAA,UAAA,SAAA,EAAA,UAAA,SAEA,EAAA,UAAA,IAAA,SAAA,GACA,IAAA,EAAA,EAAA,MAAA,KACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,KAAA,KACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,QAAA,GACA,GAAA,GAAA,EAAA,OAAA,EAAA,GACA,MAAA,IAAA,MAAA,mBAAA,EAAA,YAAA,GAEA,OAAA,GAIA,IAAA,GAAA,EAAA,KACA,GAAA,KAAA,IAKA,EAAA,UAAA,UAAA,SAAA,GACA,QAAA,IAAA,GAAA,WAAA,GAAA,GAAA,CACA,GAAA,IAAA,EAEA,OAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,KAAA,KAAA,IAAA,OAEA,GAAA,IAAA,EAEA,OAAA,IAAA,EAAA,CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,IAAA,OAGA,IAAA,EAAA,KAAA,YAEA,EAfA,GAiBA,EAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,YAAA,EAAA,GAJA,OAKA,EAAA,EAAA,YACA,OAAA,KAAA,IAAA,EAAA,GArBA,OAqBA,IAEA,EAEA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAGA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,IAAA,EAAA,CAAA,IAAA,IAAA,QAAA,MACA,OAAA,IAAA,EAAA,EAAA,OAAA,CAAA,KAAA,KAAA,MAEA,OAAA,GAAA,WAAA,EAAA,KAAA,KAAA,MAAA,EAAA,KAIA,IAAA,GAAA,SAAA,EAAA,EAAA,GAMA,MAAA,OAHA,EAAA,GAAA,IAGA,OAFA,EAAA,GAAA,IAEA,OADA,EAAA,GAAA,KAIA,GAAA,SAAA,GAEA,OADA,GAAA,MACA,OAAA,EAAA,MAAA,IAAA,EAAA,MAAA,MAAA,MAGA,GAAA,GAEA,GAAA,EAAA,KAGA,GAAA,SAAA,EAAA,EAAA,QACA,IAAA,IAAA,EAAA,IAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EACA,KAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAEA,IAAA,EAAA,EAAA,IAAA,OAKA,GAJA,GAAA,IAAA,EAAA,SAEA,EAAA,OAAA,KAAA,IAAA,KAEA,GAAA,GACA,MAAA,IAAA,MAAA,sBAAA,EAAA,mBAIA,MAFA,WAAA,GAAA,KAAA,EAAA,IAAA,EAAA,IACA,WAAA,GAAA,KAAA,EAAA,IAAA,EAAA,IACA,GAAA,GAAA,EAAA,EAAA,GACA,MAAA,EAAA,QAAA,GAAA,EAAA,QAAA,EAAA,WAGA,EAAA,UAAA,IACA,EAAA,UAAA,YAAA,SAAA,EAAA,QACA,IAAA,IAAA,EAAA,IAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EACA,KAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAEA,OAAA,GAAA,WAAA,EAAA,CAAA,KAAA,EAAA,GAAA,OAAA,KAGA,EAAA,UAAA,YAAA,SAAA,QACA,IAAA,IAAA,GAAA,GAEA,IAAA,EAAA,KAAA,KACA,EAAA,EAAA,GACA,OAAA,GACA,KAAA,KAAA,CAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GACA,MAEA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,QAIA,EAAA,UAAA,SAAA,SAAA,QACA,IAAA,IAAA,EAAA,GAEA,IACA,EADA,KACA,MAGA,OAFA,EAAA,IAAA,GAAA,EACA,EAAA,GAAA,IAAA,EAAA,GAAA,GACA,IAAA,EAAA,EAAA,OAAA,MAJA,KAIA,SAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GAGA,YAFA,IAAA,IAAA,EAAA,GAEA,KAAA,UAAA,IAGA,IAAA,GAAA,EAAA,KAEA,EAAA,UAAA,IAAA,SAAA,EAAA,EAAA,QACA,IAAA,IAAA,GAAA,GAEA,IAAA,EAAA,EAAA,MAAA,KACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,KAAA,KACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,QAAA,GACA,GAAA,GAAA,EAAA,CACA,GAAA,UAAA,GAAA,GACA,OAAA,EAAA,OAAA,IACA,IAAA,IACA,IAAA,IAAA,EAAA,KAAA,EAAA,MACA,IAAA,IAAA,EAAA,KAAA,EAAA,OAAA,GAAA,MACA,IAAA,IAAA,EAAA,KAAA,EAAA,OAAA,GAAA,MACA,QAAA,EAAA,IAAA,MAEA,CAAA,GAAA,WAAA,GAAA,GAGA,MAAA,IAAA,MAAA,mCAFA,EAAA,GAAA,EAIA,IAAA,EAAA,IAAA,EAAA,EAAA,GACA,OAAA,GACA,KAAA,KAAA,EAAA,KACA,MAEA,EAEA,MAAA,IAAA,MAAA,mBAAA,EAAA,YAAA,GAEA,OAAA,GAgBA,GAAA,IAZA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,KACA,EAAA,EAAA,KACA,OAAA,IAAA,EACA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IACA,QAOA,IAAA,GAAA,KAAA,KACA,GAAA,KAAA,IAoBA,GAAA,KAlBA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,KACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,KACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,IAAA,EACA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GACA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GACA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GACA,QAmBA,GAAA,IAZA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,MACA,EAAA,EAAA,MACA,OAAA,IAAA,EACA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IACA,QAOA,IAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAEA,EAAA,EAmBA,EAAA,EAAA,EAAA,EAAA,EAAA,EAMA,EAAA,EAwBA,MAhDA,QAAA,GACA,EAAA,EAAA,MACA,EAAA,EAAA,OACA,QAAA,GACA,EAAA,EAAA,MACA,EAAA,EAAA,OACA,QAAA,GACA,EAAA,EAAA,MACA,EAAA,EAAA,OACA,QAAA,GACA,EAAA,EAAA,MACA,EAAA,EAAA,OACA,QAAA,GAAA,QAAA,IACA,EAAA,MACA,EAAA,EAAA,MACA,EAAA,EAAA,OAIA,MAAA,EAAA,OAAA,EAAA,KACA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAKA,MAAA,IAAA,MAAA,GAUA,MAAA,GAGA,MAAA,GAIA,EAAA,OAAA,KAHA,EAAA,EACA,GAAA,GAAA,GAAA,GAAA,OAAA,IAAA,EAAA,KAJA,EAAA,EACA,GAAA,GAAA,GAAA,GAAA,OAAA,IAAA,EAAA,IAHA,EAAA,EAAA,GAPA,EAAA,GAAA,EAAA,EAAA,IACA,GAAA,EAAA,KACA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,IAAA,EAEA,EAAA,QAaA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAEA,IAAA,EAAA,CAAA,EAAA,EADA,EAAA,GAAA,EAAA,IACA,IAGA,GAAA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,EAAA,EAAA,QAIA,GAAA,IAAA,GACA,GAAA,IAAA,GASA,GAAA,IAPA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,MACA,EAAA,EAAA,MACA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,QAWA,GAAA,IALA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,EAAA,EAAA,QAWA,GAAA,IALA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,EAAA,EAAA,QAWA,GAAA,IALA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,EAAA,EAAA,QAWA,GAAA,IALA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,EAAA,EAAA,QAMA,IAAA,GAAA,EAAA,SACA,GAAA,KAAA,IACA,GAAA,KAAA,KACA,GAAA,KAAA,GACA,GAAA,KAAA,IACA,GAAA,KAAA,IACA,GAAA,KAAA,MAiEA,GAAA,SAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,OACA,EAAA,CAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,KACA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,EACA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,EACA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,EACA,EAAA,IAAA,EAAA,GAAA,EAMA,OAJA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,GAAA,WAAA,EAAA,GAAA,GACA,IAAA,EAAA,GAAA,KAQA,GAAA,EAAA,KAEA,GAAA,KAAA,IAEA,GAAA,SAAA,GAGA,IAAA,EAAA,MACA,EAAA,EAAA,QACA,EAAA,EAEA,EAAA,CAAA,EAAA,GACA,EAAA,GACA,EAAA,CAAA,EAAA,GACA,GAAA,EACA,EAAA,GACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,EAAA,GACA,GAAA,EACA,EAAA,EAIA,EAAA,SAAA,GAMA,IALA,EAAA,GAAA,CAAA,OAAA,UACA,WAAA,GAAA,IAAA,EAAA,QACA,EAAA,OAAA,EAAA,iBACA,EAAA,EAAA,OAAA,EAAA,gBAEA,UAAA,GAAA,GAAA,CAEA,IAAA,EAAA,SACA,EAAA,CAAA,EAAA,GAAA,EAAA,KAGA,EAAA,EAAA,MAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,GAAA,EAAA,EAAA,IAGA,EAAA,OAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,KAAA,GAAA,EAAA,OAAA,IAIA,OADA,IACA,EAAA,GAeA,EAAA,SAAA,GAAA,OAAA,GACA,EAAA,SAAA,GAAA,OAAA,GAcA,EAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAEA,GADA,MAAA,IAAA,GAAA,GACA,MAAA,IAAA,OAAA,EAAA,OAAA,EACA,EAYA,EAAA,EARA,EAHA,GAAA,EAAA,OAAA,EAhCA,SAAA,GACA,GAAA,MAAA,EAAA,CAGA,IAFA,IAAA,EAAA,EAAA,OAAA,EACA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,IACA,IAEA,OAAA,EAAA,EAEA,OAAA,EAyBA,CAAA,IACA,EAAA,OAAA,GACA,IAAA,GAEA,EAAA,IAAA,EAAA,GAEA,EAOA,EAAA,EAAA,GAEA,IACA,EAAA,EAAA,IAGA,IAAA,IAAA,EAAA,GAAA,EAAA,IAEA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAEA,EAAA,KAAA,IAAA,EAAA,KAAA,IAAA,EAAA,IAEA,IAAA,EAAA,KAAA,MAAA,IAAA,GAEA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,OACA,CACA,GAAA,UAAA,GAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,CACA,EAAA,EAAA,GACA,MAEA,GAAA,GAAA,GAAA,IAAA,EAAA,OAAA,EAAA,CACA,EAAA,EAAA,GACA,MAEA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CACA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,YAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GACA,WAGA,aAAA,GAAA,KACA,EAAA,EAAA,IAEA,IAAA,EAAA,GAAA,GAEA,OAAA,GAGA,EAAA,WAAA,OAAA,EAAA,IAEA,EAAA,GAIA,IAAA,EAAA,SAAA,GACA,IAAA,EAAA,EAAA,EAAA,IACA,OAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAwMA,OArMA,EAAA,QAAA,SAAA,GACA,GAAA,MAAA,EAAA,CACA,GAAA,UAAA,GAAA,GACA,EAAA,EACA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,OAAA,QACA,CACA,IAAA,EAAA,EAAA,QAAA,GAEA,EADA,IAAA,EACA,CAAA,EAAA,IAAA,EAAA,KAEA,EAAA,OAAA,EAAA,IAAA,GAGA,OAAA,EAEA,OAAA,GAIA,EAAA,OAAA,SAAA,GACA,IAAA,UAAA,OACA,OAAA,EAEA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,OAAA,GACA,EAAA,GACA,IAAA,EAAA,EAAA,OACA,GAAA,EAAA,SAAA,GAAA,IAAA,EAEA,IAAA,IAAA,EAAA,EAAA,EAAA,MAAA,KAAA,GAAA,EAAA,EAAA,OAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GAEA,EAAA,MAAA,EAAA,IAAA,EAAA,QAEA,CACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,GAAA,EAAA,IAEA,GAAA,EAAA,OAAA,EAAA,CAEA,IAAA,EAAA,EAAA,IAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,OAAA,KACA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,IAAA,EAAA,KACA,EAAA,MAAA,SAAA,EAAA,GAAA,OAAA,EAAA,KAAA,MACA,EAAA,SAAA,GACA,GAAA,GAAA,GAAA,GAAA,EAAA,OAAA,EAEA,IADA,IAAA,EAAA,EACA,GAAA,EAAA,EAAA,IAAA,IACA,IAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAEA,OADA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAQA,OADA,EAAA,CAAA,EAAA,GACA,GAGA,EAAA,KAAA,SAAA,GACA,OAAA,UAAA,QAGA,EAAA,EACA,IACA,GAJA,GAOA,EAAA,MAAA,SAAA,EAAA,GAEA,OADA,EAAA,GACA,GAGA,EAAA,IAAA,SAAA,GAEA,OADA,EAAA,EACA,GAGA,EAAA,OAAA,SAAA,GACA,OAAA,UAAA,QAGA,EAAA,EACA,GAHA,GAMA,EAAA,iBAAA,SAAA,GAkCA,OAjCA,MAAA,IAAA,GAAA,GACA,EAAA,EACA,IAEA,EADA,EACA,SAAA,GAUA,IATA,IAAA,EAAA,EAAA,GAAA,GAAA,MAAA,GACA,EAAA,EAAA,GAAA,GAAA,MAAA,GACA,EAAA,EAAA,EACA,EAAA,EAAA,GAAA,GAAA,MAAA,GACA,EAAA,GAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,GACA,KAAA,IAAA,GAAA,KAAA,KAAA,GAEA,IAAA,IAAA,GACA,EAAA,GACA,EAAA,EACA,GAAA,IAAA,EAAA,KAEA,EAAA,EACA,GAAA,IAAA,EAAA,IAEA,EAAA,EAAA,GAAA,GAAA,MAAA,GACA,EAAA,EAAA,EAGA,OAAA,GAGA,SAAA,GAAA,OAAA,GAEA,GAGA,EAAA,QAAA,SAAA,GACA,OAAA,MAAA,GACA,WAAA,GAAA,KACA,EAAA,CAAA,EAAA,IAEA,EAAA,EACA,GAEA,GAIA,EAAA,OAAA,SAAA,EAAA,GAEA,UAAA,OAAA,IAAA,EAAA,OACA,IAAA,EAAA,GAEA,GAAA,IAAA,UAAA,OACA,EAAA,EAAA,MAAA,QAEA,GAAA,IAAA,EACA,EAAA,CAAA,EAAA,UAEA,GAAA,EAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EACA,EAmDA,SAAA,EAAA,EAAA,GAIA,IAHA,IAAA,EAAA,GACA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,KAAA,GAEA,OAAA,EA1DA,CAAA,EAAA,GAAA,GAAA,IAAA,SAAA,GAAA,OAAA,EAAA,EAAA,GAAA,EAAA,GAAA,SAEA,CACA,EAAA,GACA,IAAA,EAAA,GACA,GAAA,GAAA,EAAA,OAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,UAGA,EAAA,EAEA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,KAMA,OAHA,EAAA,KACA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,QAEA,GAGA,EAAA,MAAA,SAAA,GACA,OAAA,MAAA,GACA,EAAA,EACA,GAEA,GAIA,EAAA,MAAA,SAAA,GACA,OAAA,MAAA,GACA,EAAA,EACA,GAEA,GAIA,EAAA,OAAA,SAAA,GACA,OAAA,MAAA,GACA,EAAA,EAAA,GACA,GAEA,GAIA,GAsBA,IAAA,GAAA,SAAA,GACA,IAAA,EAAA,EAAA,EAEA,EAAA,EAAA,EAAA,EAEA,GAAA,KADA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,IAAA,EAAA,MACA,OAEA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,SAAA,GACA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,IAAA,SAAA,GAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MACA,OAAA,IAAA,EAAA,EAAA,aAEA,GAAA,IAAA,EAAA,OAEA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,SAAA,GACA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,IAAA,SAAA,GAAA,OAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KACA,OAAA,IAAA,EAAA,EAAA,aAEA,GAAA,IAAA,EAAA,OAAA,CAEA,IAAA,EACA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,SAAA,GACA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,IAAA,SAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KACA,OAAA,IAAA,EAAA,EAAA,aAEA,GAAA,IAAA,EAAA,OAAA,CACA,IAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IACA,EAAA,GAAA,EAAA,MAAA,EAAA,IACA,EAAA,SAAA,GACA,OAAA,EAAA,GACA,EAAA,EAAA,GAEA,EAAA,GAAA,EAAA,MAIA,OAAA,GAiBA,GAAA,SAAA,EAAA,EAAA,GACA,IAAA,GAAA,GACA,MAAA,IAAA,MAAA,sBAAA,GAEA,OAAA,GAAA,GAAA,EAAA,IAGA,GAAA,SAAA,GAAA,OAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GAAA,MACA,EAAA,EAAA,GAAA,MACA,OAAA,EAAA,IAAA,EAAA,EAAA,MAGA,GAAA,SAAA,GAAA,OAAA,SAAA,EAAA,GACA,IAAA,EAAA,GAIA,OAHA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IACA,IAmBA,GAAA,OAAA,GAAA,GAhBA,SAAA,GAAA,OAAA,KAiBA,GAAA,SAAA,GAAA,GAhBA,SAAA,EAAA,GAAA,OAAA,EAAA,EAAA,OAiBA,GAAA,OAAA,GAAA,GAdA,SAAA,EAAA,GAAA,OAAA,KAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,SAeA,GAAA,QAAA,GAAA,GAdA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,KAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,SAeA,GAAA,OAAA,GAAA,GAlBA,SAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,KAmBA,GAAA,QAAA,GAAA,GAlBA,SAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,KAmBA,GAAA,MAAA,GAAA,GAfA,SAAA,EAAA,GACA,OAAA,MAAA,EAAA,KACA,EAAA,EAAA,IAAA,KAAA,EAAA,EAAA,MACA,IAAA,IAAA,KAaA,GAAA,KAAA,GAAA,GAjBA,SAAA,EAAA,GAAA,OAAA,KAAA,GAAA,EAAA,EAAA,MAAA,EAAA,SAkeA,IA9cA,IAAA,GAAA,GAMA,GAAA,EAAA,KACA,GAAA,EAAA,SACA,GAAA,EAAA,MACA,GAAA,KAAA,IACA,GAAA,KAAA,IACA,GAAA,KAAA,IAkFA,GAAA,KAAA,MACA,GAAA,KAAA,OAUA,GAAA,KAAA,IACA,GAAA,KAAA,IACA,GAAA,KAAA,MACA,GAAA,KAAA,IAGA,GAAA,SAAA,EAAA,QACA,IAAA,IAAA,EAAA,MAEA,IAAA,EAAA,CACA,IAAA,OAAA,UACA,KAAA,EAAA,OAAA,UACA,IAAA,EACA,OAAA,GACA,MAAA,GAoBA,MAlBA,WAAA,EAAA,KACA,EAAA,OAAA,OAAA,IAEA,EAAA,QAAA,SAAA,GACA,GAAA,WAAA,EAAA,KAAA,EAAA,EAAA,IACA,MAAA,GAAA,MAAA,KACA,EAAA,OAAA,KAAA,GACA,EAAA,KAAA,EACA,EAAA,EAAA,MAAA,EAAA,IAAA,GACA,EAAA,EAAA,MAAA,EAAA,IAAA,GACA,EAAA,OAAA,KAIA,EAAA,OAAA,CAAA,EAAA,IAAA,EAAA,KAEA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,IAEA,GAIA,GAAA,SAAA,EAAA,EAAA,QACA,IAAA,IAAA,EAAA,cACA,IAAA,IAAA,EAAA,GAEA,SAAA,EAAA,KACA,EAAA,GAAA,IAEA,IAAA,EAAA,EAAA,IACA,EAAA,EAAA,IACA,EAAA,EAAA,OAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAEA,GAAA,IAAA,EAAA,MAAA,CAAA,EAAA,GAEA,IAAA,EAAA,GAOA,GALA,MAAA,EAAA,OAAA,EAAA,KACA,EAAA,KAAA,GACA,EAAA,KAAA,IAGA,MAAA,EAAA,OAAA,EAAA,GAAA,CACA,EAAA,KAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAEA,EAAA,KAAA,QAGA,GAAA,MAAA,EAAA,OAAA,EAAA,GAAA,CACA,GAAA,GAAA,EACA,MAAA,IAAA,MAAA,uDAEA,IAAA,EAAA,KAAA,OAAA,GAAA,GACA,EAAA,KAAA,OAAA,GAAA,GACA,EAAA,KAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAEA,EAAA,KAAA,QAGA,GAAA,MAAA,EAAA,OAAA,EAAA,GAAA,CACA,EAAA,KAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CACA,IAAA,GAAA,EAAA,OAAA,GAAA,EAAA,EACA,EAAA,GAAA,GACA,GAAA,IAAA,EACA,EAAA,KAAA,EAAA,QACA,CACA,IAAA,EAAA,EAAA,EACA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAGA,EAAA,KAAA,QAIA,GAAA,MAAA,EAAA,OAAA,EAAA,GAAA,CAMA,IAAA,EACA,EAAA,EAAA,OACA,EAAA,IAAA,MAAA,GACA,EAAA,IAAA,MAAA,GACA,GAAA,EACA,EAAA,EACA,EAAA,MAGA,EAAA,IACA,KAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAIA,IAFA,EAAA,KAAA,GAEA,GAAA,CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAIA,IAHA,IAAA,EAAA,EAAA,GACA,EAAA,OAAA,UACA,OAAA,EACA,EAAA,EAAA,EAAA,EAAA,IAAA,CACA,IAAA,EAAA,GAAA,EAAA,GAAA,GACA,EAAA,IACA,EAAA,EACA,EAAA,GAEA,EAAA,KACA,EAAA,GAAA,EAMA,IADA,IAAA,EAAA,IAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,KAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAEA,OAAA,EADA,EAAA,EAAA,IAEA,EAAA,GAAA,EAAA,GAEA,EAAA,IAAA,EAAA,GAGA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,EAAA,EAAA,GAIA,GAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,GAAA,EACA,MAIA,EAAA,IACA,EAEA,MACA,GAAA,GAOA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EADA,EAAA,EAAA,IACA,KAAA,EAAA,IAGA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,EAAA,GAAA,IACA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,OAAA,IAEA,EAAA,EAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IACA,EAAA,KAAA,EAAA,IACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,MAAA,KAAA,IAAA,EAAA,QAAA,IACA,EAAA,KAAA,IAIA,OAAA,GAGA,GAAA,CAAA,QAAA,GAAA,OAAA,IAYA,GAAA,KAAA,KACA,GAAA,KAAA,MACA,GAAA,KAAA,IACA,GAAA,KAAA,IACA,GAAA,KAAA,GA2EA,GAAA,CACA,KAAA,WAAA,OAAA,GAAA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,GAAA,OACA,IAAA,WAAA,OAAA,GAAA,CAAA,OAAA,OAAA,OAAA,SAAA,KAAA,SAoeAAA,GAAA,IAGA,IAAA,GAAA,GAqEA,OAzBA,EAAA,QAljCA,SAAA,EAAA,EAAA,QACA,IAAA,IAAA,EAAA,aACA,IAAA,IAAA,EAAA,MAEA,IAAA,EAAA,EAAA,OACA,IAAA,EAAA,MAAA,KAAA,IAAA,MAAA,IAAA,IAAA,WAAA,OAAA,KAEA,IAAA,EAAA,EAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAIA,GAHA,EAAA,QAAA,SAAA,EAAA,GAAA,EAAA,IAAA,IAEA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,IAAA,EAAA,KACA,SAAA,EACA,OAAA,GAAA,EAAA,GAQA,IANA,IAAA,EAAA,EAAA,QACA,EAAA,EAAA,IAAA,GACA,EAAA,GACA,EAAA,EACA,EAAA,EAEA,EAAA,EAAA,EAAA,EAAA,OAAA,IAGA,GAFA,EAAA,IAAA,EAAA,IAAA,GAAA,EAAA,GACA,EAAA,KAAA,MAAA,EAAA,IAAA,EAAA,EAAA,IACA,MAAA,EAAA,OAAA,KAAA,MAAA,EAAA,IAAA,CACA,IAAA,EAAA,EAAA,GAAA,IAAA,GACA,GAAA,GAAA,GAAA,EAAA,GACA,GAAA,GAAA,GAAA,EAAA,GAIA,IAAA,EAAA,EAAA,QAAA,EAAA,GACA,EAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,IAAA,GACA,GAAA,EAAA,QAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,IAAA,MAAA,EAAA,IAEA,GADA,EAAA,IAAA,EAAA,EAAA,GACA,MAAA,EAAA,OAAA,GAAA,CACA,IAAA,EAAA,EAAA,GAAA,IAAA,GACA,GAAA,GAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,GAAA,EAAA,EAAA,QAEA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,KAMA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,GAAA,MAAA,EAAA,OAAA,GAAA,CAEA,IADA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GAAA,IACA,EAAA,GAAA,GAAA,IACA,KAAA,GAAA,KAAA,GAAA,IACA,EAAA,GAAA,OAEA,EAAA,GAAA,EAAA,GAAA,EAAA,GAIA,OADA,GAAA,EACA,IAAA,EAAA,EAAA,GAAA,MAAA,EAAA,OAAA,EAAA,GAAA,IAw/BA,EAAA,OA9jBA,SAAA,GACA,IAAA,EAAA,GAAA,GAEA,OADA,EAAA,MAAA,WAAA,OAAA,GAAA,IACA,GA4jBA,EAAA,MAAA,GACA,EAAA,UArfA,SAAA,EAAA,EAAA,EAAA,EAAA,QACA,IAAA,IAAA,EAAA,UACA,IAAA,IAAA,GAAA,UACA,IAAA,IAAA,EAAA,QACA,IAAA,IAAA,EAAA,QACA,IAAA,IAAA,EAAA,CAAA,EAAA,IAEA,IAAA,EAAA,EAAA,EACA,UAAA,GAAA,GACA,EAAA,EAAA,GAAA,EAAA,IAEA,EAAA,EACA,EAAA,CAAA,EAAA,IAGA,IAAA,EAAA,SAAA,GACA,IAAA,EAAA,KAAA,EAAA,KAAA,IAAA,EAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAEA,GADA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,GAAA,EAAA,GAAA,EACA,EAAA,GAAA,GACA,EAAA,GAAA,GAIA,OAAA,EAAA,GAAA,CAAA,KAHA,EAAA,IAAA,OAAA,EAAA,QAAA,IAGA,KAFA,EAAA,IAAA,OAAA,EAAA,OAAA,IAEA,KADA,EAAA,GAAA,QAAA,IACA,MAiDA,OA9CA,EAAA,MAAA,SAAA,GACA,OAAA,MAAA,EAAA,GACA,EAAA,EACA,IAGA,EAAA,UAAA,SAAA,GACA,OAAA,MAAA,EAAA,GACA,EAAA,EACA,IAGA,EAAA,MAAA,SAAA,GACA,OAAA,MAAA,EAAA,GACA,EAAA,EACA,IAGA,EAAA,IAAA,SAAA,GACA,OAAA,MAAA,EAAA,GAEA,UAAA,GADA,EAAA,GAGA,IADA,EAAA,EAAA,GAAA,EAAA,MACA,EAAA,EAAA,IAEA,EAAA,EAEA,IAGA,EAAA,UAAA,SAAA,GACA,OAAA,MAAA,EAAA,GACA,UAAA,GAAA,IACA,EAAA,EACA,EAAA,EAAA,GAAA,EAAA,KAEA,EAAA,CAAA,EAAA,GACA,EAAA,GAEA,IAGA,EAAA,MAAA,WAAA,OAAA,EAAA,MAAA,IAEA,EAAA,IAAA,GAEA,GA4aA,EAAA,IAAA,EAAA,YAAA,GACA,EAAA,OAraA,WAEA,IADA,IAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,IACA,GARA,mBAQA,OAAA,GAAA,GAAA,OAEA,OAAA,IAAA,EAAA,EAAA,QAiaA,EAAA,MAAA,GAGA,EAAA,QAAA,GAAA,QACA,EAAA,SA1NA,SAAA,EAAA,GAGA,EAAA,IAAA,EAAA,GACA,EAAA,IAAA,EAAA,GACA,IAAA,EAAA,EAAA,YACA,EAAA,EAAA,YACA,OAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAoNA,EAAA,OA3MA,SAAA,EAAA,EAAA,EAAA,QACA,IAAA,IAAA,EAAA,QACA,IAAA,IAAA,EAAA,GAIA,EAAA,IAAA,EAAA,GACA,EAAA,IAAA,EAAA,GAcA,IAbA,IAAA,EAAA,MAAA,KAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,MAAA,KAAA,EAAA,OACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,KAAA,QAAA,GAAA,EAAA,OAAA,GACA,EAAA,MAAA,GAAA,EAAA,MAAA,GAAA,KACA,EAAA,EAAA,KAAA,EAAA,IAAA,GAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IACA,KAAA,GAAA,KAAA,GAAA,IACA,IAAA,EAAA,GAAA,KAAA,GAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,EAAA,KAAA,MAAA,IAAA,GAAA,GAAA,GAAA,IAAA,EAAA,IAAA,MACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,OACA,EAAA,GAAA,EAAA,EAAA,EAAA,GAEA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,EAEA,GALA,EAAA,IAKA,EAAA,GACA,EAAA,GAAA,EAAA,GAEA,OAAA,GAAA,EAAA,EAAA,EAAA,GAJA,EAAA,EAAA,EAAA,EAAA,EAAA,IAGA,EAAA,KA0KA,EAAA,SArKA,SAAA,EAAA,EAAA,QACA,IAAA,IAAA,EAAA,OAIA,EAAA,IAAA,EAAA,GACA,EAAA,IAAA,EAAA,GACA,IAAA,EAAA,EAAA,IAAA,GACA,EAAA,EAAA,IAAA,GACA,EAAA,EACA,IAAA,IAAA,KAAA,EAAA,CACA,IAAA,GAAA,EAAA,IAAA,IAAA,EAAA,IAAA,GACA,GAAA,EAAA,EAEA,OAAA,KAAA,KAAA,IAwJA,EAAA,OAAA,GAAA,OACA,EAAA,MAtJA,WAEA,IADA,IAAA,EAAA,GAAA,EAAA,UAAA,OACA,KAAA,EAAA,GAAA,UAAA,GAEA,IAEA,OADA,IAAA,SAAA,UAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,MACA,EACA,MAAA,GACA,OAAA,IAiJA,EAAA,OAAA,GAGA,EAAA,OAAA,GACA,EAAA,OAAA,GAEA;;ACxnGC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5Bc,IAAA,EAAA,SAACyN,GAAsD,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAA7CC,EAAAA,EAAAA,WAAAA,OAAa,IAAA,EAAA,GAAuC,EAAnCC,EAAAA,EAAAA,KAAAA,OAAO,IAAA,EAAA,GAA4B,EAAxBC,EAAAA,EAAAA,QAAAA,OAAU,IAAA,EAAA,GAAc,EACrEC,EAAUhP,SAASE,cAAc,OACvC8O,EAAQC,UAAY,UACpBD,EAAQE,UAGwEL,8IAAAA,OAAAA,EAAWJ,QAAQ,WAAY,IAE7GG,oBAAAA,OAAU,aAAVA,EAG8DE,uHAAAA,OAAAA,EAE5D,oBAAA,GACFF,QAAAA,OAAU,SAAVA,EAGiEG,6HAAAA,OAAAA,EAE/D,oBAAA,GAhBJ,QAkBMI,IAAAA,EAAenP,SAASE,cAAc,UAMrC8O,OALPG,EAAaC,UAAY,SACzBD,EAAaE,iBAAiB,QAAS,SAAgB,GAAb7K,EAAAA,OACjC8K,WAAWC,WAEpBP,EAAQQ,YAAYL,GACbH,GACR,QAAA,QAAA;;ACDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA3Bc,IAAA,EAAA,WAAsC,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAnCtL,EAAAA,EAAAA,KAAAA,OAAO,IAAA,EAAA,OAAmC,EAA3BmL,EAAAA,EAAAA,WAAAA,OAAa,IAAA,EAAA,GAAc,EACpDG,EAAUhP,SAASE,cAAc,OACjCuP,EAAiB,SAAAzO,GAAS0C,OAAAA,IAAS1C,EAAQ,WAAa,IAC9DgO,EAAQC,UAAY,UACpBD,EAAQE,UAKqBO,mJAAAA,OAAAA,EAAe,QACfA,iDAAAA,OAAAA,EAAe,QACXA,qDAAAA,OAAAA,EAAe,YAMgCZ,4NAAAA,OAAAA,EAAWJ,QAAQ,WAAY,IAb/G,oBAgBMU,IAAAA,EAAenP,SAASE,cAAc,UAMrC8O,OALPG,EAAaC,UAAY,SACzBD,EAAaE,iBAAiB,QAAS,SAAgB,GAAb7K,EAAAA,OACjC8K,WAAWC,WAEpBP,EAAQQ,YAAYL,GACbH,GACR,QAAA,QAAA;;ACyHA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EApJc,IAAA,EAAA,WACPU,IAAAA,EAAS,GAGTC,EAAiB3P,SAAS4P,eAAe,sBAAsB5O,MACjE2O,GAAmB,OAAnBA,EACFD,EAAO/N,GAAK3B,SAAS4P,eAAe,MAAM5O,WACrC,GAAuB,YAAnB2O,EAA8B,CACjCE,IAAAA,EAAU7P,SAAS4P,eAAe,YAAY5O,MAC9C8O,EAAa9P,SAAS4P,eAAe,eAAe5O,MAC1D0O,EAAOpB,QAAauB,GAAAA,OAAAA,EAAWC,KAAAA,OAAAA,GAI3BC,IAAAA,EAAmB/P,SAAS4P,eAAe,WAE7CI,GADuB,CAAC,YAAa,SAClBC,SAASF,EAAiB/O,OAAQ,CACjDkP,IAAAA,EAAalQ,SAASmQ,cAAc,wBAC1CT,EAAOK,EAAiB/O,QAAUkP,EAAWlP,MAI1BhB,SAAS4P,eAAe,gBAC3BQ,UAChBV,EAAOW,cAAe,GAIlBC,IAAAA,EAAOtQ,SAAS4P,eAAe,QACjCU,EAAKtP,OAAwB,SAAfsP,EAAKtP,QACrB0O,EAAOY,KAAOA,EAAKtP,OAIfuP,IAAAA,EAAelF,MAAMmF,KAAKxQ,SAASyQ,iBAAiB,yBACvDC,OAAO,SAAAC,GAAYA,OAAAA,EAASP,UAC5BQ,IAAI,SAAAD,GAAYA,OAAAA,EAAShN,OACxB4M,EAAapN,OAAS,IACxBuM,EAAOmB,YAAcN,EAAazN,KAAK,MAInCgO,IAAAA,EAAa9Q,SAAS4P,eAAe,cACvCkB,EAAW9P,QACb0O,EAAOoB,YAAcA,EAAW9P,OAInB,CAAC,QAAS,UAAW,cAC7B+P,QAAQ,SAACC,GACRC,IAAAA,EAAUjR,SAAS4P,eAAeoB,GACpCC,EAAQjQ,QACV0O,EAAOsB,GAASC,EAAQjQ,SAKD,CAAC,mBAAoB,YAAa,qBAAsB,YAChE+P,QAAQ,SAACG,GACTlR,SAAS4P,eAAesB,GAC5Bd,UACXV,EAAOwB,IAAU,KAIfC,IAAAA,EAAiB,SAACC,GAChBC,IAAAA,EAAQ,CAAC,aAAc,OAAQ,WAC9BhG,OAAAA,MAAMmF,KAAKY,EAAWE,YAC1BV,IAAI,SAACW,GACEC,IAAAA,EAAO,GAYNA,OAXPH,EAAMN,QAAQ,SAACU,GACPC,IAAAA,EAAQH,EAAMpB,cAAkBsB,IAAAA,OAAAA,IAClCC,GAAAA,GAASA,EAAM1Q,MAAO,CAChB0C,IAAAA,EAAgBgO,EAAhBhO,KAAM1C,EAAU0Q,EAAV1Q,MAEZwQ,EAAKC,GADM,eAATA,EACeC,IAAAA,OAAAA,EAAM1Q,MAAvB,KAEsB,WAAT0C,GAAqB1C,EAAQA,KAIzCwQ,IAERd,OAAO,SAAAc,GAAQ5R,OAAAA,OAAOsO,KAAKsD,GAAMrO,OAAS,KAGzCwO,EAAiB,SAAC/C,GAChBgD,IAAAA,EAAc5R,SAASyQ,iBAAiB,oCACxCoB,EAAgB,SAAAC,GACpBzG,OAAAA,MAAMmF,KAAKoB,GAAaG,KAAK,SAAAzO,GAAKwO,OAAAA,IAAgBxO,EAAE0O,QAAQ7Q,OAE1DyN,GAAAA,EACKuC,OAAAA,EAAeU,EAAcjD,IAEhCqD,IAAAA,EAAY5G,MAAMmF,KAAKoB,GAAahB,IAAI,SAAAsB,GAAMA,OAAAA,EAAGF,QAAQ7Q,MACzDgR,EAAQ,GAOPA,OANPF,EAAUlB,QAAQ,SAACe,GACXM,IAAAA,EAASjB,EAAeU,EAAcC,IACxCM,EAAOjP,OAAS,IAClBgP,EAAML,GAAeM,KAGlBD,GAIHL,EAAc9R,SAAS4P,eAAe,eAAe5O,MACvD8Q,GAAgB,YAAhBA,EAA2B,CAET,SAAhBA,IACFpC,EAAOoC,YAAcA,GAEjBhD,IAAAA,EAAO9O,SAAS4P,eAAe,gBAC/Bb,EAAU/O,SAAS4P,eAAe,mBACpCd,EAAK9N,QACP0O,EAAOZ,MAAQA,EAAK9N,OAElB+N,EAAQ/N,QACV0O,EAAOX,SAAWA,EAAQ/N,OAGtBqR,IAAAA,EAAcV,EAAeG,GAC/BO,EAAYlP,OAAS,IACvBuM,EAAO2C,YACJP,EAAAA,GAAAA,EAAcO,QAGd,CAECC,IAAAA,EAAetS,SAASyQ,iBAAiB,wBACzC8B,EAAmBlH,MAAMmF,KAAK8B,GACjC1B,IAAI,SAACsB,GACEM,IAAAA,EAAY,GACZ9O,EAAOwO,EAAG/B,cAAc,SAASnP,MACvCwR,EAAU9O,KAAOA,EACXmL,IAAAA,EAAaqD,EAAG/B,cAAc,eAAenP,MAE5CwR,OADH3D,IAAY2D,EAAU3D,WAAiBA,IAAAA,OAAAA,EAA3B,MACT2D,IAEX9C,EAAOoC,YAAcS,EAEfF,IAAAA,EAAcV,IAChB/R,OAAOsO,KAAKmE,GAAalP,OAAS,IACpCuM,EAAO2C,YAAcA,GAIlB3C,OAAAA,GACR,QAAA,QAAA;;ACxDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5FD,IAAA,EAAA,EAAA,QAAA,cAEA,EAAA,EAAA,QAAA,6BACA,EAAA,EAAA,QAAA,8BAyFC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAvFc,IAAA,EAAA,SAACA,GAER+C,IAAAA,EAAkB,CAAC,KAAM,WACzB9C,EAAiB/P,OAAOsO,KAAKwB,GAAQqC,KAAK,SAAA5Q,GAAOsR,OAAAA,EAAgBxC,SAAS9O,KAG5EuO,GAFJ1P,SAAS4P,eAAe,sBAAsB5O,MAAQ2O,GAAkB,OACxE3P,SAAS4P,eAAe,MAAM5O,MAAQ0O,EAAO/N,IAAM,GAC/C+N,EAAOpB,SAAgD,IAArCoB,EAAOpB,QAAQ5L,MAAM,KAAKS,OACxC,MAAA,IAAIuP,MAAM,wEAElB1S,SAAS4P,eAAe,YAAY5O,MAAQ0O,EAAOpB,QAAUoB,EAAOpB,QAAQ5L,MAAM,KAAK,GAAK,GAC5F1C,SAAS4P,eAAe,eAAe5O,MAAQ0O,EAAOpB,QAAUoB,EAAOpB,QAAQ5L,MAAM,KAAK,GAAK,GAGzFiQ,IAAAA,EAAc,CAAC,YAAa,SAC5BC,EAAahT,OAAOsO,KAAKwB,GAAQqC,KAAK,SAAA5Q,GAAOwR,OAAAA,EAAY1C,SAAS9O,MACxEnB,SAAS4P,eAAe,WAAW5O,MAAQ4R,GAAc,UACrDA,KACiB5S,SAASmQ,cAAc,wBAC/BnP,MAAQ0O,EAAOkD,IAI5B5S,SAAS4P,eAAe,gBAAgBQ,SAAWV,EAAOW,aAG1DrQ,SAAS4P,eAAe,QAAQ5O,MAAQ0O,EAAOY,MAAQ,OAGjD5N,IAAAA,EAAQgN,EAAOmB,YAAcnB,EAAOmB,YAAYnO,MAAM,KAAO,CAAC,UAAW,gBAC1D1C,SAASyQ,iBAAiB,wBAClCM,QAAQ,SAACJ,GACpBA,EAASP,QAAU1N,EAAMuN,SAASU,EAAShN,QAI7C3D,SAAS4P,eAAe,cAAc5O,MAAQ0O,EAAOoB,YAAc,GAGpD,CACb,CAAEnN,KAAM,QAASkP,aAAc,WAC/B,CAAElP,KAAM,UAAWkP,aAAc,WACjC,CAAElP,KAAM,eAEHoN,QAAQ,SAAiC,GAA9BpN,IAAAA,EAAAA,EAAAA,KAAMkP,EAAAA,EAAAA,aAAAA,OAAe,IAAA,EAAA,GAAS,EACxClS,EAAM+O,EAAO/L,IAASkP,EAC5B7S,SAAS4P,eAAejM,GAAM3C,MAAQL,EAClCA,IACFX,SAAS4P,eAAkBjM,GAAAA,OAAAA,EAAc3C,WAAAA,OAAQ,EAAOL,EAAAA,SAAAA,MAKjC,CAAC,mBAAoB,YAAa,qBAAsB,YAChEoQ,QAAQ,SAACG,GAC1BlR,SAAS4P,eAAesB,GAAQd,QAAUV,EAAOwB,KAInDlR,SAAS4P,eAAe,iBAAiBV,UAAY,GAC/C4D,IAAAA,EAAO9S,SAASyQ,iBAAiB,oCACvCqC,EAAK/B,QAAQ,SAACgC,GACZA,EAAI7D,UAAY,KAIZ8D,IAAAA,EAAmB3H,MAAMC,QAAQoE,EAAOoC,aAAe,UAAYpC,EAAOoC,YAI5EkB,GAHJhT,SAAS4P,eAAe,eAAe5O,MAAQgS,GAAoB,OACnEhT,SAAS4P,eAAe,gBAAgB5O,MAAQ0O,EAAOZ,MAAQ,GAC/D9O,SAAS4P,eAAe,mBAAmB5O,MAAQ0O,EAAOX,SAAW,GAC5C,YAArBiE,EAAgC,CAC5BhE,IAAAA,EAAUhP,SAAS4P,eAAe,iBACxCF,EAAOoC,YAAYf,QAAQ,SAACnC,GAC1BI,EAAQQ,aAAY,EAAkBZ,EAAAA,SAAAA,MAKtCc,EAAO2C,aACTzS,OAAOqT,QAAQvD,EAAO2C,aAAatB,QAAQ,SAAoB,GAAA,IAAA,EAAA,EAAA,EAAA,GAAlBnC,EAAkB,EAAA,GAAA,EAAA,GACvDmC,QAAQ,SAACmC,GACPH,IAAAA,EAAM1H,MAAMmF,KAAKsC,GAAMf,KAAK,SAAAG,GAAMA,OAAAA,EAAGF,QAAQ7Q,MAAQyN,IACvDmE,GACFA,EAAIvD,aAAY,EAAiBZ,EAAAA,SAAAA,EAAOsE,SAKjD,QAAA,QAAA;;ACzEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnBD,IAAA,EAAA,EAAA,QAAA,UAmBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAjBc,IAAA,EAAA,SAACxD,GAAQyD,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GACtBC,EAAeC,EAAM7G,QAAAA,UAAUkD,EAAQ,KAAM,GAe5C4D,MAbPH,KAAAA,OAAAA,EAMI,6MAAA,kEAGOC,yHAAAA,OAAAA,EAVX,2DAceG,QAChB,QAAA,QAAA;;ACwOG,aA3PJ,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,4BACA,EAAA,EAAA,QAAA,6BACA,EAAA,EAAA,QAAA,2BACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,0BAqPI,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAnPJ,IAAMC,EAA0B,WACxBC,IAAAA,EAASzT,SAAS4P,eAAe,sBACjC8D,EAAWrI,MAAMmF,KAAKiD,EAAOE,UAChC/C,IAAI,SAAAsB,GAAMA,OAAAA,EAAGF,QAAQ4B,OACrBlD,OAAO,SAAA/O,GAAMA,OAAAA,IACVkS,EAASJ,EAAOK,iBAAmBL,EAAOK,gBAAgB3Q,OAAS,EACrEsQ,EAAOK,gBAAgB,GAAG9B,QAAQ4B,KAClC,GACJF,EAAS3C,QAAQ,SAACpP,GACL3B,SAAS4P,eAAejO,GAChCoS,UAAUC,OAAO,SAAUH,IAAWlS,MAIvCsS,EAAmB,SAAC/B,GAClBgC,IAAAA,EAAYhC,EAAG/B,cAAc,6BAC7BgE,EAAajC,EAAG/B,cAAc,uBACpC+D,EAAU7E,iBAAiB,QAAS,SAAgB,GAAb7K,IAAAA,EAAAA,EAAAA,OACrC2P,EAAWnT,OAAQ,EAAOwD,EAAAA,SAAAA,EAAOxD,SAEnCmT,EAAW9E,iBAAiB,QAAS,SAAgB,GAAb7K,IAAAA,EAAAA,EAAAA,OACtC0P,EAAUlT,MAAQwD,EAAOxD,QAEvBkT,EAAUlT,QACZmT,EAAWnT,MAAQkT,EAAUlT,QAI3BoT,EAAqB,SAAClC,GACpBmC,IAAAA,EAAe,CAAC,YAAa,SAC7BnE,EAAalQ,SAAS4P,eAAe,iBACrC0E,EAAgB,SAACb,GACrBvD,EAAW6D,UAAUC,OAAO,UAAWK,EAAapE,SAASwD,EAAOzS,SAEtEsT,EAAcpE,GACdgC,EAAG7C,iBAAiB,SAAU,SAAgB,GAAb7K,IAAAA,EAAAA,EAAAA,OAC/B8P,EAAc9P,MAIZ+P,EAAY,WACVzC,IAAAA,EAAc9R,SAAS4P,eAAe,eACtCyC,EAAcrS,SAAS4P,eAAe,gBACtC4E,EAAgBnC,EAAYlC,cAAc,SAC1CyB,EAAcS,EAAY5B,iBAAiB,sBAC7C,GAACqB,GAAqC,SAAtBA,EAAY9Q,MAEzB,GAA0B,YAAtB8Q,EAAY9Q,MAAqB,CAC1CqR,EAAY0B,UAAUxE,OAAO,UAC7BiF,EAAcT,UAAUU,IAAI,UAC5B7C,EAAYb,QAAQ,SAACzN,GAAQA,EAAEyQ,UAAUxE,OAAO,YAC7BlE,MAAMmF,KAAKoB,GAAaG,KAAK,SAAAzO,GAAKwO,OAAAA,EAAY9Q,QAAUsC,EAAE0O,QAAQ7Q,MAC1E4S,UAAUU,IAAI,eAEzBpC,EAAY0B,UAAUxE,OAAO,UAC7BiF,EAAcT,UAAUxE,OAAO,eAT/B8C,EAAY0B,UAAUU,IAAI,WAaxBC,EAAqB,WACnBC,IAAAA,EAAa3U,SAASyQ,iBAAiB,8BACvCmB,EAAc5R,SAASyQ,iBAAiB,oCAC9CkE,EAAW5D,QAAQ,SAAC6D,GAClBA,EAAUvF,iBAAiB,QAAS,WAElCsF,EAAW5D,QAAQ,SAAC1N,GAAQA,EAAE0Q,UAAUxE,OAAO,YAC/CqC,EAAYb,QAAQ,SAACzN,GAAQA,EAAEyQ,UAAUxE,OAAO,YAChDqF,EAAUb,UAAUU,IAAI,UACLpJ,MAAMmF,KAAKoB,GAAaG,KAAK,SAAAzO,GAAKsR,OAAAA,EAAU5C,QAAQ7Q,MAAQmC,EAAE0O,QAAQ7Q,MAC9E4S,UAAUU,IAAI,eAKzBI,EAAuB,SAACpB,GAAQqB,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAE3CrB,GAAAA,EAAOK,gBAAiB,CACpBD,IAAAA,EAASJ,EAAOK,gBAAgB,GAAG9B,QAAQ4B,KAAKlR,MAAM,KAF/C,CAAC,OAAQ,WAGfqO,QAAQ,SAACW,GACRqD,IAAAA,EAAe/U,SAAS4P,eAAe8B,GAC7CqD,EAAahB,UAAUC,OAAO,UAAWH,EAAO5D,SAASyB,IACrDoD,IACFC,EAAa5E,cAAc,SAASnP,MAAQ,MAI1CsR,IAAAA,EAAetS,SAAS4P,eAAe,iBACL,YAApC6D,EAAOK,gBAAgB,GAAG9S,OAC5BsR,EAAahD,WAAWyE,UAAUxE,OAAO,UACV,KAA3B+C,EAAapD,WAEfoD,EAAa9C,aAAY,EAAzB,EAAA,aAGF8C,EAAahD,WAAWyE,UAAUU,IAAI,YAKtCO,EAAoB,SAAC9C,GACzB2C,EAAqB3C,GACrBA,EAAG7C,iBAAiB,QAAS,SAAgB,GAAb7K,IAAAA,EAAAA,EAAAA,OAC9BqQ,EAAqBrQ,GAAQ,GAC7B+P,OAIEU,EAAqB,WACnBC,IAAAA,EAAclV,SAAS4P,eAAe,gBAC5C5P,SAAS4P,eAAe,iBAAiBP,iBAAiB,QAAS,WACjE6F,EAAYtG,MAAMuG,QAAU,UAE9BnV,SAASyQ,iBAAiB,iBAAiBM,QAAQ,SAACqE,GAClDA,EAAY/F,iBAAiB,QAAS,WACpC6F,EAAYtG,MAAMuG,QAAU,WAGhCD,EAAY7F,iBAAiB,QAAS,SAAgB,GAAb7K,EAAAA,SACxB0Q,IACbA,EAAYtG,MAAMuG,QAAU,UAGhCnV,SAASmQ,cAAc,wBAAwBd,iBAAiB,QAAS,WACnE+D,IAAAA,EAAepT,SAASmQ,cAAc,0BAA0BnP,MAC9DqU,EAAiBrV,SAASmQ,cAAc,wBAE1C,IACImF,IAAAA,EAAelC,EAAamC,MAAM,IAAI7G,OAAO,yBAA0B,MACzE4G,GAAgBA,EAAanS,QAAU,IACzCiQ,EAAekC,EAAa,IAGxB5F,IAAAA,EAAS2D,EAAMnH,QAAAA,MAAMkH,GAC3BjJ,QAAQqL,IAAI9F,GAEZ2F,EAAezG,MAAMuG,QAAU,OAC/BE,EAAejG,UAAY,IAEdM,EAAAA,EAAAA,SAAAA,GACb8D,IACAqB,EAAqB7U,SAAS4P,eAAe,gBAC7C2E,IAEAW,EAAYtG,MAAMuG,QAAU,OAC5B,MAAOM,GACPJ,EAAezG,MAAMuG,QAAU,QAC/BE,EAAejG,UAAsBqG,UAAAA,OAAAA,EAAM7J,SAC3CzB,QAAQsL,MAAMA,OAKdC,EAAe,WACbC,IAAAA,EAAWtK,MAAMmF,KAAKxQ,SAAS4V,kBAAkB,aACpD7D,KAAK,SAAAG,GAAMA,OAAAA,EAAG9B,UACdpP,MACG0O,GAAS,EAAf,EAAA,WACMmG,EAAkB7V,SAAS4P,eAAe,eAE9CiG,EAAgB7U,MADD,SAAb2U,GACsB,EAAcjG,EAAAA,SAAAA,EAAQ/Q,OAAOmX,iBAC/B,OAAbH,EACetC,EAAM7G,QAAAA,UAAUkD,EAAQ,KAAM,GAE9BqG,KAAKvJ,UAAUkD,EAAQ,KAAM,IAInDsG,EAAc,WAEChW,SAAS4P,eAAe,wBAChCV,UAAY,GAEjB+G,IAAAA,EAASjW,SAASmQ,cAAc,8BACtC8F,EAAOlC,UAAUC,OAAO,UAAU,GAC5BtE,IAAAA,GAAS,EAAf,EAAA,WACKA,EAAO/N,IAAO+N,EAAOpB,UAExBoB,EAAO/N,GAAKhD,OAAOmX,gBAAkB,2BAA6B,4BAGpEI,WAAWC,KAAKzG,GAKhB/Q,OAAO0Q,iBAAiB,UAAW,SAAc,GAAX+G,IAAAA,EAAAA,EAAAA,KAC9BC,EAAS,eACX,GAAmB,iBAATD,GAAsBC,EAAO3O,KAAK0O,GAG5C,IACiBL,KAAK7J,MAAMkK,EAAK3H,QAAQ4H,EAAQ,KACpCC,OACbL,EAAOlC,UAAUC,OAAO,UAAU,GAEpC,MAAOyB,GACPtL,QAAQsL,MAAM,wCAAyCW,OAKvDG,EAAO,WAEXtB,IAEAzB,IACAxT,SAAS4P,eAAe,sBAAsBP,iBAAiB,QAASmE,GAEnDxT,SAASyQ,iBAAiB,iBAClCM,QAAQ,SAACyF,GACpBvC,EAAiBuC,KAGnBpC,EAAmBpU,SAAS4P,eAAe,YAE3C5P,SAAS4P,eAAe,oBAAoBP,iBAAiB,QAAS,WACpErP,SAAS4P,eAAe,iBAAiBJ,aAAY,EAArD,EAAA,cAGF+E,IACAG,IAEA1U,SAAS4P,eAAe,mBAAmBP,iBAAiB,QAAS,WAC7DoH,IAAAA,EAAYzW,SAASmQ,cAAc,wBACzCsG,EAAUjH,aAAY,EAAiBiH,EAAAA,SAAAA,EAAUzE,QAAQ7Q,QAG3D6T,EAAkBhV,SAAS4P,eAAe,gBAE1C5P,SAAS4P,eAAe,mBAAmBP,iBAAiB,QAASqG,GACrErK,MAAMmF,KAAKxQ,SAAS4V,kBAAkB,aAAa7E,QAAQ,SAAC2F,GAC1DA,EAAYrH,iBAAiB,SAAUqG,KAGvB,CAAC,eAAgB,mBACzB3E,QAAQ,SAAC4F,GACXC,IAAAA,EAAS5W,SAAS4P,eAAe+G,GACnCC,GACFA,EAAOvH,iBAAiB,QAAS2G,MAKvCO","file":"client.e452148c.js","sourceRoot":"../src/client","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.JSON5 = factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar _global = createCommonjsModule(function (module) {\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self\n\t  // eslint-disable-next-line no-new-func\n\t  : Function('return this')();\n\tif (typeof __g == 'number') { __g = global; } // eslint-disable-line no-undef\n\t});\n\n\tvar _core = createCommonjsModule(function (module) {\n\tvar core = module.exports = { version: '2.6.5' };\n\tif (typeof __e == 'number') { __e = core; } // eslint-disable-line no-undef\n\t});\n\tvar _core_1 = _core.version;\n\n\tvar _isObject = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\tvar _anObject = function (it) {\n\t  if (!_isObject(it)) { throw TypeError(it + ' is not an object!'); }\n\t  return it;\n\t};\n\n\tvar _fails = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\n\t// Thank's IE8 for his funny defineProperty\n\tvar _descriptors = !_fails(function () {\n\t  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\tvar document = _global.document;\n\t// typeof document.createElement is 'object' in old IE\n\tvar is = _isObject(document) && _isObject(document.createElement);\n\tvar _domCreate = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\n\tvar _ie8DomDefine = !_descriptors && !_fails(function () {\n\t  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tvar _toPrimitive = function (it, S) {\n\t  if (!_isObject(it)) { return it; }\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\tvar dP = Object.defineProperty;\n\n\tvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  _anObject(O);\n\t  P = _toPrimitive(P, true);\n\t  _anObject(Attributes);\n\t  if (_ie8DomDefine) { try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) { /* empty */ } }\n\t  if ('get' in Attributes || 'set' in Attributes) { throw TypeError('Accessors not supported!'); }\n\t  if ('value' in Attributes) { O[P] = Attributes.value; }\n\t  return O;\n\t};\n\n\tvar _objectDp = {\n\t\tf: f\n\t};\n\n\tvar _propertyDesc = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\tvar _hide = _descriptors ? function (object, key, value) {\n\t  return _objectDp.f(object, key, _propertyDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tvar _has = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\tvar id = 0;\n\tvar px = Math.random();\n\tvar _uid = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n\tvar _library = false;\n\n\tvar _shared = createCommonjsModule(function (module) {\n\tvar SHARED = '__core-js_shared__';\n\tvar store = _global[SHARED] || (_global[SHARED] = {});\n\n\t(module.exports = function (key, value) {\n\t  return store[key] || (store[key] = value !== undefined ? value : {});\n\t})('versions', []).push({\n\t  version: _core.version,\n\t  mode: _library ? 'pure' : 'global',\n\t  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n\t});\n\t});\n\n\tvar _functionToString = _shared('native-function-to-string', Function.toString);\n\n\tvar _redefine = createCommonjsModule(function (module) {\n\tvar SRC = _uid('src');\n\n\tvar TO_STRING = 'toString';\n\tvar TPL = ('' + _functionToString).split(TO_STRING);\n\n\t_core.inspectSource = function (it) {\n\t  return _functionToString.call(it);\n\t};\n\n\t(module.exports = function (O, key, val, safe) {\n\t  var isFunction = typeof val == 'function';\n\t  if (isFunction) { _has(val, 'name') || _hide(val, 'name', key); }\n\t  if (O[key] === val) { return; }\n\t  if (isFunction) { _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key))); }\n\t  if (O === _global) {\n\t    O[key] = val;\n\t  } else if (!safe) {\n\t    delete O[key];\n\t    _hide(O, key, val);\n\t  } else if (O[key]) {\n\t    O[key] = val;\n\t  } else {\n\t    _hide(O, key, val);\n\t  }\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, TO_STRING, function toString() {\n\t  return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n\t});\n\t});\n\n\tvar _aFunction = function (it) {\n\t  if (typeof it != 'function') { throw TypeError(it + ' is not a function!'); }\n\t  return it;\n\t};\n\n\t// optional / simple context binding\n\n\tvar _ctx = function (fn, that, length) {\n\t  _aFunction(fn);\n\t  if (that === undefined) { return fn; }\n\t  switch (length) {\n\t    case 1: return function (a) {\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function (a, b) {\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function (a, b, c) {\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function (/* ...args */) {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\tvar PROTOTYPE = 'prototype';\n\n\tvar $export = function (type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n\t  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n\t  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n\t  var key, own, out, exp;\n\t  if (IS_GLOBAL) { source = name; }\n\t  for (key in source) {\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    // export native or passed\n\t    out = (own ? target : source)[key];\n\t    // bind timers to global for call from export context\n\t    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n\t    // extend global\n\t    if (target) { _redefine(target, key, out, type & $export.U); }\n\t    // export\n\t    if (exports[key] != out) { _hide(exports, key, exp); }\n\t    if (IS_PROTO && expProto[key] != out) { expProto[key] = out; }\n\t  }\n\t};\n\t_global.core = _core;\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library`\n\tvar _export = $export;\n\n\t// 7.1.4 ToInteger\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tvar _toInteger = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tvar _defined = function (it) {\n\t  if (it == undefined) { throw TypeError(\"Can't call method on  \" + it); }\n\t  return it;\n\t};\n\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tvar _stringAt = function (TO_STRING) {\n\t  return function (that, pos) {\n\t    var s = String(_defined(that));\n\t    var i = _toInteger(pos);\n\t    var l = s.length;\n\t    var a, b;\n\t    if (i < 0 || i >= l) { return TO_STRING ? '' : undefined; }\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n\tvar $at = _stringAt(false);\n\t_export(_export.P, 'String', {\n\t  // 21.1.3.3 String.prototype.codePointAt(pos)\n\t  codePointAt: function codePointAt(pos) {\n\t    return $at(this, pos);\n\t  }\n\t});\n\n\tvar codePointAt = _core.String.codePointAt;\n\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar _toAbsoluteIndex = function (index, length) {\n\t  index = _toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n\tvar fromCharCode = String.fromCharCode;\n\tvar $fromCodePoint = String.fromCodePoint;\n\n\t// length should be 1, old FF problem\n\t_export(_export.S + _export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n\t  // 21.1.2.2 String.fromCodePoint(...codePoints)\n\t  fromCodePoint: function fromCodePoint(x) {\n\t    var arguments$1 = arguments;\n\t // eslint-disable-line no-unused-vars\n\t    var res = [];\n\t    var aLen = arguments.length;\n\t    var i = 0;\n\t    var code;\n\t    while (aLen > i) {\n\t      code = +arguments$1[i++];\n\t      if (_toAbsoluteIndex(code, 0x10ffff) !== code) { throw RangeError(code + ' is not a valid code point'); }\n\t      res.push(code < 0x10000\n\t        ? fromCharCode(code)\n\t        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n\t      );\n\t    } return res.join('');\n\t  }\n\t});\n\n\tvar fromCodePoint = _core.String.fromCodePoint;\n\n\t// This is a generated file. Do not edit.\n\tvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\n\tvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\n\tvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\n\tvar unicode = {\n\t\tSpace_Separator: Space_Separator,\n\t\tID_Start: ID_Start,\n\t\tID_Continue: ID_Continue\n\t};\n\n\tvar util = {\n\t    isSpaceSeparator: function isSpaceSeparator (c) {\n\t        return typeof c === 'string' && unicode.Space_Separator.test(c)\n\t    },\n\n\t    isIdStartChar: function isIdStartChar (c) {\n\t        return typeof c === 'string' && (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c === '$') || (c === '_') ||\n\t        unicode.ID_Start.test(c)\n\t        )\n\t    },\n\n\t    isIdContinueChar: function isIdContinueChar (c) {\n\t        return typeof c === 'string' && (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c >= '0' && c <= '9') ||\n\t        (c === '$') || (c === '_') ||\n\t        (c === '\\u200C') || (c === '\\u200D') ||\n\t        unicode.ID_Continue.test(c)\n\t        )\n\t    },\n\n\t    isDigit: function isDigit (c) {\n\t        return typeof c === 'string' && /[0-9]/.test(c)\n\t    },\n\n\t    isHexDigit: function isHexDigit (c) {\n\t        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n\t    },\n\t};\n\n\tvar source;\n\tvar parseState;\n\tvar stack;\n\tvar pos;\n\tvar line;\n\tvar column;\n\tvar token;\n\tvar key;\n\tvar root;\n\n\tvar parse = function parse (text, reviver) {\n\t    source = String(text);\n\t    parseState = 'start';\n\t    stack = [];\n\t    pos = 0;\n\t    line = 1;\n\t    column = 0;\n\t    token = undefined;\n\t    key = undefined;\n\t    root = undefined;\n\n\t    do {\n\t        token = lex();\n\n\t        // This code is unreachable.\n\t        // if (!parseStates[parseState]) {\n\t        //     throw invalidParseState()\n\t        // }\n\n\t        parseStates[parseState]();\n\t    } while (token.type !== 'eof')\n\n\t    if (typeof reviver === 'function') {\n\t        return internalize({'': root}, '', reviver)\n\t    }\n\n\t    return root\n\t};\n\n\tfunction internalize (holder, name, reviver) {\n\t    var value = holder[name];\n\t    if (value != null && typeof value === 'object') {\n\t        for (var key in value) {\n\t            var replacement = internalize(value, key, reviver);\n\t            if (replacement === undefined) {\n\t                delete value[key];\n\t            } else {\n\t                value[key] = replacement;\n\t            }\n\t        }\n\t    }\n\n\t    return reviver.call(holder, name, value)\n\t}\n\n\tvar lexState;\n\tvar buffer;\n\tvar doubleQuote;\n\tvar sign;\n\tvar c;\n\n\tfunction lex () {\n\t    lexState = 'default';\n\t    buffer = '';\n\t    doubleQuote = false;\n\t    sign = 1;\n\n\t    for (;;) {\n\t        c = peek();\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[lexState]) {\n\t        //     throw invalidLexState(lexState)\n\t        // }\n\n\t        var token = lexStates[lexState]();\n\t        if (token) {\n\t            return token\n\t        }\n\t    }\n\t}\n\n\tfunction peek () {\n\t    if (source[pos]) {\n\t        return String.fromCodePoint(source.codePointAt(pos))\n\t    }\n\t}\n\n\tfunction read () {\n\t    var c = peek();\n\n\t    if (c === '\\n') {\n\t        line++;\n\t        column = 0;\n\t    } else if (c) {\n\t        column += c.length;\n\t    } else {\n\t        column++;\n\t    }\n\n\t    if (c) {\n\t        pos += c.length;\n\t    }\n\n\t    return c\n\t}\n\n\tvar lexStates = {\n\t    default: function default$1 () {\n\t        switch (c) {\n\t        case '\\t':\n\t        case '\\v':\n\t        case '\\f':\n\t        case ' ':\n\t        case '\\u00A0':\n\t        case '\\uFEFF':\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'comment';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        if (util.isSpaceSeparator(c)) {\n\t            read();\n\t            return\n\t        }\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[parseState]) {\n\t        //     throw invalidLexState(parseState)\n\t        // }\n\n\t        return lexStates[parseState]()\n\t    },\n\n\t    comment: function comment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineComment';\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'singleLineComment';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    multiLineComment: function multiLineComment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineCommentAsterisk';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    },\n\n\t    multiLineCommentAsterisk: function multiLineCommentAsterisk () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        lexState = 'multiLineComment';\n\t    },\n\n\t    singleLineComment: function singleLineComment () {\n\t        switch (c) {\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        read();\n\t    },\n\n\t    value: function value () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        case 'n':\n\t            read();\n\t            literal('ull');\n\t            return newToken('null', null)\n\n\t        case 't':\n\t            read();\n\t            literal('rue');\n\t            return newToken('boolean', true)\n\n\t        case 'f':\n\t            read();\n\t            literal('alse');\n\t            return newToken('boolean', false)\n\n\t        case '-':\n\t        case '+':\n\t            if (read() === '-') {\n\t                sign = -1;\n\t            }\n\n\t            lexState = 'sign';\n\t            return\n\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            buffer = '';\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    identifierNameStartEscape: function identifierNameStartEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t            break\n\n\t        default:\n\t            if (!util.isIdStartChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    identifierName: function identifierName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            buffer += read();\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameEscape';\n\t            return\n\t        }\n\n\t        if (util.isIdContinueChar(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('identifier', buffer)\n\t    },\n\n\t    identifierNameEscape: function identifierNameEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            break\n\n\t        default:\n\t            if (!util.isIdContinueChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    sign: function sign$1 () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', sign * Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    zero: function zero () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\n\t        case 'x':\n\t        case 'X':\n\t            buffer += read();\n\t            lexState = 'hexadecimal';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * 0)\n\t    },\n\n\t    decimalInteger: function decimalInteger () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalPointLeading: function decimalPointLeading () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalPoint: function decimalPoint () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalFraction: function decimalFraction () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalExponent: function decimalExponent () {\n\t        switch (c) {\n\t        case '+':\n\t        case '-':\n\t            buffer += read();\n\t            lexState = 'decimalExponentSign';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentSign: function decimalExponentSign () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentInteger: function decimalExponentInteger () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    hexadecimal: function hexadecimal () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'hexadecimalInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    hexadecimalInteger: function hexadecimalInteger () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    string: function string () {\n\t        switch (c) {\n\t        case '\\\\':\n\t            read();\n\t            buffer += escape();\n\t            return\n\n\t        case '\"':\n\t            if (doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case \"'\":\n\t            if (!doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case '\\n':\n\t        case '\\r':\n\t            throw invalidChar(read())\n\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            separatorChar(c);\n\t            break\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    },\n\n\t    start: function start () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        // This code is unreachable since the default lexState handles eof.\n\t        // case undefined:\n\t        //     return newToken('eof')\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t            buffer = read();\n\t            lexState = 'identifierName';\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameStartEscape';\n\t            return\n\n\t        case '}':\n\t            return newToken('punctuator', read())\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        if (util.isIdStartChar(c)) {\n\t            buffer += read();\n\t            lexState = 'identifierName';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        if (c === ':') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        lexState = 'value';\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case '}':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (c === ']') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case ']':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the default lexState.\n\t        // if (c === undefined) {\n\t        //     read()\n\t        //     return newToken('eof')\n\t        // }\n\n\t        throw invalidChar(read())\n\t    },\n\t};\n\n\tfunction newToken (type, value) {\n\t    return {\n\t        type: type,\n\t        value: value,\n\t        line: line,\n\t        column: column,\n\t    }\n\t}\n\n\tfunction literal (s) {\n\t    for (var i = 0, list = s; i < list.length; i += 1) {\n\t        var c = list[i];\n\n\t        var p = peek();\n\n\t        if (p !== c) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    }\n\t}\n\n\tfunction escape () {\n\t    var c = peek();\n\t    switch (c) {\n\t    case 'b':\n\t        read();\n\t        return '\\b'\n\n\t    case 'f':\n\t        read();\n\t        return '\\f'\n\n\t    case 'n':\n\t        read();\n\t        return '\\n'\n\n\t    case 'r':\n\t        read();\n\t        return '\\r'\n\n\t    case 't':\n\t        read();\n\t        return '\\t'\n\n\t    case 'v':\n\t        read();\n\t        return '\\v'\n\n\t    case '0':\n\t        read();\n\t        if (util.isDigit(peek())) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        return '\\0'\n\n\t    case 'x':\n\t        read();\n\t        return hexEscape()\n\n\t    case 'u':\n\t        read();\n\t        return unicodeEscape()\n\n\t    case '\\n':\n\t    case '\\u2028':\n\t    case '\\u2029':\n\t        read();\n\t        return ''\n\n\t    case '\\r':\n\t        read();\n\t        if (peek() === '\\n') {\n\t            read();\n\t        }\n\n\t        return ''\n\n\t    case '1':\n\t    case '2':\n\t    case '3':\n\t    case '4':\n\t    case '5':\n\t    case '6':\n\t    case '7':\n\t    case '8':\n\t    case '9':\n\t        throw invalidChar(read())\n\n\t    case undefined:\n\t        throw invalidChar(read())\n\t    }\n\n\t    return read()\n\t}\n\n\tfunction hexEscape () {\n\t    var buffer = '';\n\t    var c = peek();\n\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    c = peek();\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tfunction unicodeEscape () {\n\t    var buffer = '';\n\t    var count = 4;\n\n\t    while (count-- > 0) {\n\t        var c = peek();\n\t        if (!util.isHexDigit(c)) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    }\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tvar parseStates = {\n\t    start: function start () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (token.type) {\n\t        case 'identifier':\n\t        case 'string':\n\t            key = token.value;\n\t            parseState = 'afterPropertyName';\n\t            return\n\n\t        case 'punctuator':\n\t            // This code is unreachable since it's handled by the lexState.\n\t            // if (token.value !== '}') {\n\t            //     throw invalidToken()\n\t            // }\n\n\t            pop();\n\t            return\n\n\t        case 'eof':\n\t            throw invalidEOF()\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator' || token.value !== ':') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        parseState = 'beforePropertyValue';\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        if (token.type === 'punctuator' && token.value === ']') {\n\t            pop();\n\t            return\n\t        }\n\n\t        push();\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforePropertyName';\n\t            return\n\n\t        case '}':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforeArrayValue';\n\t            return\n\n\t        case ']':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'eof') {\n\t        //     throw invalidToken()\n\t        // }\n\t    },\n\t};\n\n\tfunction push () {\n\t    var value;\n\n\t    switch (token.type) {\n\t    case 'punctuator':\n\t        switch (token.value) {\n\t        case '{':\n\t            value = {};\n\t            break\n\n\t        case '[':\n\t            value = [];\n\t            break\n\t        }\n\n\t        break\n\n\t    case 'null':\n\t    case 'boolean':\n\t    case 'numeric':\n\t    case 'string':\n\t        value = token.value;\n\t        break\n\n\t    // This code is unreachable.\n\t    // default:\n\t    //     throw invalidToken()\n\t    }\n\n\t    if (root === undefined) {\n\t        root = value;\n\t    } else {\n\t        var parent = stack[stack.length - 1];\n\t        if (Array.isArray(parent)) {\n\t            parent.push(value);\n\t        } else {\n\t            parent[key] = value;\n\t        }\n\t    }\n\n\t    if (value !== null && typeof value === 'object') {\n\t        stack.push(value);\n\n\t        if (Array.isArray(value)) {\n\t            parseState = 'beforeArrayValue';\n\t        } else {\n\t            parseState = 'beforePropertyName';\n\t        }\n\t    } else {\n\t        var current = stack[stack.length - 1];\n\t        if (current == null) {\n\t            parseState = 'end';\n\t        } else if (Array.isArray(current)) {\n\t            parseState = 'afterArrayValue';\n\t        } else {\n\t            parseState = 'afterPropertyValue';\n\t        }\n\t    }\n\t}\n\n\tfunction pop () {\n\t    stack.pop();\n\n\t    var current = stack[stack.length - 1];\n\t    if (current == null) {\n\t        parseState = 'end';\n\t    } else if (Array.isArray(current)) {\n\t        parseState = 'afterArrayValue';\n\t    } else {\n\t        parseState = 'afterPropertyValue';\n\t    }\n\t}\n\n\t// This code is unreachable.\n\t// function invalidParseState () {\n\t//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n\t// }\n\n\t// This code is unreachable.\n\t// function invalidLexState (state) {\n\t//     return new Error(`JSON5: invalid lex state '${state}'`)\n\t// }\n\n\tfunction invalidChar (c) {\n\t    if (c === undefined) {\n\t        return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t    }\n\n\t    return syntaxError((\"JSON5: invalid character '\" + (formatChar(c)) + \"' at \" + line + \":\" + column))\n\t}\n\n\tfunction invalidEOF () {\n\t    return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t}\n\n\t// This code is unreachable.\n\t// function invalidToken () {\n\t//     if (token.type === 'eof') {\n\t//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n\t//     }\n\n\t//     const c = String.fromCodePoint(token.value.codePointAt(0))\n\t//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n\t// }\n\n\tfunction invalidIdentifier () {\n\t    column -= 5;\n\t    return syntaxError((\"JSON5: invalid identifier character at \" + line + \":\" + column))\n\t}\n\n\tfunction separatorChar (c) {\n\t    console.warn((\"JSON5: '\" + (formatChar(c)) + \"' in strings is not valid ECMAScript; consider escaping\"));\n\t}\n\n\tfunction formatChar (c) {\n\t    var replacements = {\n\t        \"'\": \"\\\\'\",\n\t        '\"': '\\\\\"',\n\t        '\\\\': '\\\\\\\\',\n\t        '\\b': '\\\\b',\n\t        '\\f': '\\\\f',\n\t        '\\n': '\\\\n',\n\t        '\\r': '\\\\r',\n\t        '\\t': '\\\\t',\n\t        '\\v': '\\\\v',\n\t        '\\0': '\\\\0',\n\t        '\\u2028': '\\\\u2028',\n\t        '\\u2029': '\\\\u2029',\n\t    };\n\n\t    if (replacements[c]) {\n\t        return replacements[c]\n\t    }\n\n\t    if (c < ' ') {\n\t        var hexString = c.charCodeAt(0).toString(16);\n\t        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n\t    }\n\n\t    return c\n\t}\n\n\tfunction syntaxError (message) {\n\t    var err = new SyntaxError(message);\n\t    err.lineNumber = line;\n\t    err.columnNumber = column;\n\t    return err\n\t}\n\n\tvar stringify = function stringify (value, replacer, space) {\n\t    var stack = [];\n\t    var indent = '';\n\t    var propertyList;\n\t    var replacerFunc;\n\t    var gap = '';\n\t    var quote;\n\n\t    if (\n\t        replacer != null &&\n\t        typeof replacer === 'object' &&\n\t        !Array.isArray(replacer)\n\t    ) {\n\t        space = replacer.space;\n\t        quote = replacer.quote;\n\t        replacer = replacer.replacer;\n\t    }\n\n\t    if (typeof replacer === 'function') {\n\t        replacerFunc = replacer;\n\t    } else if (Array.isArray(replacer)) {\n\t        propertyList = [];\n\t        for (var i = 0, list = replacer; i < list.length; i += 1) {\n\t            var v = list[i];\n\n\t            var item = (void 0);\n\n\t            if (typeof v === 'string') {\n\t                item = v;\n\t            } else if (\n\t                typeof v === 'number' ||\n\t                v instanceof String ||\n\t                v instanceof Number\n\t            ) {\n\t                item = String(v);\n\t            }\n\n\t            if (item !== undefined && propertyList.indexOf(item) < 0) {\n\t                propertyList.push(item);\n\t            }\n\t        }\n\t    }\n\n\t    if (space instanceof Number) {\n\t        space = Number(space);\n\t    } else if (space instanceof String) {\n\t        space = String(space);\n\t    }\n\n\t    if (typeof space === 'number') {\n\t        if (space > 0) {\n\t            space = Math.min(10, Math.floor(space));\n\t            gap = '          '.substr(0, space);\n\t        }\n\t    } else if (typeof space === 'string') {\n\t        gap = space.substr(0, 10);\n\t    }\n\n\t    return serializeProperty('', {'': value})\n\n\t    function serializeProperty (key, holder) {\n\t        var value = holder[key];\n\t        if (value != null) {\n\t            if (typeof value.toJSON5 === 'function') {\n\t                value = value.toJSON5(key);\n\t            } else if (typeof value.toJSON === 'function') {\n\t                value = value.toJSON(key);\n\t            }\n\t        }\n\n\t        if (replacerFunc) {\n\t            value = replacerFunc.call(holder, key, value);\n\t        }\n\n\t        if (value instanceof Number) {\n\t            value = Number(value);\n\t        } else if (value instanceof String) {\n\t            value = String(value);\n\t        } else if (value instanceof Boolean) {\n\t            value = value.valueOf();\n\t        }\n\n\t        switch (value) {\n\t        case null: return 'null'\n\t        case true: return 'true'\n\t        case false: return 'false'\n\t        }\n\n\t        if (typeof value === 'string') {\n\t            return quoteString(value, false)\n\t        }\n\n\t        if (typeof value === 'number') {\n\t            return String(value)\n\t        }\n\n\t        if (typeof value === 'object') {\n\t            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n\t        }\n\n\t        return undefined\n\t    }\n\n\t    function quoteString (value) {\n\t        var quotes = {\n\t            \"'\": 0.1,\n\t            '\"': 0.2,\n\t        };\n\n\t        var replacements = {\n\t            \"'\": \"\\\\'\",\n\t            '\"': '\\\\\"',\n\t            '\\\\': '\\\\\\\\',\n\t            '\\b': '\\\\b',\n\t            '\\f': '\\\\f',\n\t            '\\n': '\\\\n',\n\t            '\\r': '\\\\r',\n\t            '\\t': '\\\\t',\n\t            '\\v': '\\\\v',\n\t            '\\0': '\\\\0',\n\t            '\\u2028': '\\\\u2028',\n\t            '\\u2029': '\\\\u2029',\n\t        };\n\n\t        var product = '';\n\n\t        for (var i = 0; i < value.length; i++) {\n\t            var c = value[i];\n\t            switch (c) {\n\t            case \"'\":\n\t            case '\"':\n\t                quotes[c]++;\n\t                product += c;\n\t                continue\n\n\t            case '\\0':\n\t                if (util.isDigit(value[i + 1])) {\n\t                    product += '\\\\x00';\n\t                    continue\n\t                }\n\t            }\n\n\t            if (replacements[c]) {\n\t                product += replacements[c];\n\t                continue\n\t            }\n\n\t            if (c < ' ') {\n\t                var hexString = c.charCodeAt(0).toString(16);\n\t                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n\t                continue\n\t            }\n\n\t            product += c;\n\t        }\n\n\t        var quoteChar = quote || Object.keys(quotes).reduce(function (a, b) { return (quotes[a] < quotes[b]) ? a : b; });\n\n\t        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n\t        return quoteChar + product + quoteChar\n\t    }\n\n\t    function serializeObject (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var keys = propertyList || Object.keys(value);\n\t        var partial = [];\n\t        for (var i = 0, list = keys; i < list.length; i += 1) {\n\t            var key = list[i];\n\n\t            var propertyString = serializeProperty(key, value);\n\t            if (propertyString !== undefined) {\n\t                var member = serializeKey(key) + ':';\n\t                if (gap !== '') {\n\t                    member += ' ';\n\t                }\n\t                member += propertyString;\n\t                partial.push(member);\n\t            }\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '{}';\n\t        } else {\n\t            var properties;\n\t            if (gap === '') {\n\t                properties = partial.join(',');\n\t                final = '{' + properties + '}';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                properties = partial.join(separator);\n\t                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\n\t    function serializeKey (key) {\n\t        if (key.length === 0) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        var firstChar = String.fromCodePoint(key.codePointAt(0));\n\t        if (!util.isIdStartChar(firstChar)) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        for (var i = firstChar.length; i < key.length; i++) {\n\t            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n\t                return quoteString(key, true)\n\t            }\n\t        }\n\n\t        return key\n\t    }\n\n\t    function serializeArray (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var partial = [];\n\t        for (var i = 0; i < value.length; i++) {\n\t            var propertyString = serializeProperty(String(i), value);\n\t            partial.push((propertyString !== undefined) ? propertyString : 'null');\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '[]';\n\t        } else {\n\t            if (gap === '') {\n\t                var properties = partial.join(',');\n\t                final = '[' + properties + ']';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                var properties$1 = partial.join(separator);\n\t                final = '[\\n' + indent + properties$1 + ',\\n' + stepback + ']';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\t};\n\n\tvar JSON5 = {\n\t    parse: parse,\n\t    stringify: stringify,\n\t};\n\n\tvar lib = JSON5;\n\n\tvar es5 = lib;\n\n\treturn es5;\n\n})));\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.0';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n","export default (style, { mediaQuery = '', rows = '', columns = '' } = {}) => {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'grouped';\n  wrapper.innerHTML = `\n  <div class=\"grouped\">\n    <label>Media query</label>\n    <input class=\"mediaQuery\" type=\"text\" placeholder=\"max-width: 400px\" value=\"${mediaQuery.replace(/(\\(|\\))/g, '')}\">\n  </div>\n  ${style !== 'carousel' ? `\n  <div class=\"grouped\">\n    <label>Rows</label>\n    <input class=\"rows\" type=\"number\" placeholder=\"auto\" value=\"${rows}\">\n  </div>\n  ` : ''}\n  ${style !== 'list' ? `\n  <div class=\"grouped\">\n    <label>Columns</label>\n    <input class=\"columns\" type=\"number\" placeholder=\"auto\" value=\"${columns}\">\n  </div>\n  ` : ''}\n  `;\n  const buttonRemove = document.createElement('button');\n  buttonRemove.innerText = 'Remove';\n  buttonRemove.addEventListener('click', ({ target }) => {\n    target.parentNode.remove();\n  });\n  wrapper.appendChild(buttonRemove);\n  return wrapper;\n};\n","export default ({ type = 'grid', mediaQuery = '' } = {}) => {\n  const wrapper = document.createElement('div');\n  const selectedString = value => type === value ? 'selected' : '';\n  wrapper.className = 'grouped';\n  wrapper.innerHTML = `\n  <div class=\"grouped\">\n    <label>Type</label>\n    <div class=\"select-wrapper\">\n      <select class=\"type\">\n        <option value=\"grid\" ${selectedString('grid')}>Grid</option>\n        <option value=\"list\" ${selectedString('list')}>List</option>\n        <option value=\"carousel\" ${selectedString('carousel')}>Carousel</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"grouped\">\n    <label style=\"width: 8rem\">Media query</label>\n    <input class=\"mediaQuery\" type=\"text\" placeholder=\"max-width: 400px\" value=\"${mediaQuery.replace(/(\\(|\\))/g, '')}\">\n  </div>\n  `;\n  const buttonRemove = document.createElement('button');\n  buttonRemove.innerText = 'Remove';\n  buttonRemove.addEventListener('click', ({ target }) => {\n    target.parentNode.remove();\n  });\n  wrapper.appendChild(buttonRemove);\n  return wrapper;\n};\n","export default () => {\n  const config = {};\n\n  // Gallery identifier\n  const identifierType = document.getElementById('gallery-identifier').value;\n  if (identifierType === 'id') {\n    config.id = document.getElementById('id').value;\n  } else if (identifierType === 'product') {\n    const shortId = document.getElementById('short-id').value;\n    const productSku = document.getElementById('product-sku').value;\n    config.product = `${shortId}/${productSku}`;\n  }\n\n  // Displayed entries\n  const displayedEntries = document.getElementById('entries');\n  const includeEntryValues = ['topRanked', 'fixed'];\n  if (includeEntryValues.includes(displayedEntries.value)) {\n    const countInput = document.querySelector('#entries-count input');\n    config[displayedEntries.value] = +countInput.value;\n  }\n\n  // Include relevant product entries\n  const campaignOnly = document.getElementById('campaignOnly');\n  if (!campaignOnly.checked) {\n    config.campaignOnly = true;\n  }\n\n  // Sort order\n  const sort = document.getElementById('sort');\n  if (sort.value && sort.value !== 'rank') {\n    config.sort = sort.value;\n  }\n\n  // Displayed sort controls\n  const sortControls = Array.from(document.querySelectorAll('#sort-controls input'))\n    .filter(checkbox => checkbox.checked)\n    .map(checkbox => checkbox.name);\n  if (sortControls.length > 0) {\n    config.sortDisplay = sortControls.join(' ');\n  }\n\n  // Minimum entries before display\n  const displayMin = document.getElementById('displayMin');\n  if (displayMin.value) {\n    config.displayMin = +displayMin.value;\n  }\n\n  // Colors\n  const colors = ['color', 'bgColor', 'thumbColor'];\n  colors.forEach((color) => {\n    const inputEl = document.getElementById(color);\n    if (inputEl.value) {\n      config[color] = inputEl.value;\n    }\n  });\n\n  // Misc. display\n  const miscDisplayOptions = ['hideAttributions', 'hideDates', 'testimonialPreview', 'seamless'];\n  miscDisplayOptions.forEach((option) => {\n    const checkbox = document.getElementById(option);\n    if (checkbox.checked) {\n      config[option] = true;\n    }\n  });\n\n  const mapLayoutRules = (tabContent) => {\n    const props = ['mediaQuery', 'rows', 'columns'];\n    return Array.from(tabContent.childNodes)\n      .map((child) => {\n        const rule = {};\n        props.forEach((prop) => {\n          const input = child.querySelector(`.${prop}`);\n          if (input && input.value) {\n            const { type, value } = input;\n            if (prop === 'mediaQuery') {\n              rule[prop] = `(${input.value})`;\n            } else {\n              rule[prop] = type === 'number' ? +value : value;\n            }\n          }\n        });\n        return rule;\n      })\n      .filter(rule => Object.keys(rule).length > 0);\n  };\n\n  const getLayoutRules = (style) => {\n    const tabContents = document.querySelectorAll('#layout-rules .tab-content > div');\n    const getTabContent = layoutStyle => (\n      Array.from(tabContents).find(c => layoutStyle === c.dataset.key)\n    );\n    if (style) {\n      return mapLayoutRules(getTabContent(style));\n    }\n    const allStyles = Array.from(tabContents).map(el => el.dataset.key);\n    const rules = {};\n    allStyles.forEach((layoutStyle) => {\n      const mapped = mapLayoutRules(getTabContent(layoutStyle));\n      if (mapped.length > 0) {\n        rules[layoutStyle] = mapped;\n      }\n    });\n    return rules;\n  };\n\n  // Layout styles\n  const layoutStyle = document.getElementById('layoutStyle').value;\n  if (layoutStyle !== 'dynamic') {\n    // layout style is static\n    if (layoutStyle !== 'grid') {\n      config.layoutStyle = layoutStyle;\n    }\n    const rows = document.getElementById('default-rows');\n    const columns = document.getElementById('default-columns');\n    if (rows.value) {\n      config.rows = +rows.value;\n    }\n    if (columns.value) {\n      config.columns = +columns.value;\n    }\n    // layout rules for static style\n    const layoutRules = getLayoutRules(layoutStyle);\n    if (layoutRules.length > 0) {\n      config.layoutRules = {\n        [layoutStyle]: layoutRules,\n      };\n    }\n  } else {\n    // layout style is dynamic\n    const layoutStyles = document.querySelectorAll('#layout-styles > div');\n    const layoutStyleRules = Array.from(layoutStyles)\n      .map((el) => {\n        const styleRule = {};\n        const type = el.querySelector('.type').value;\n        styleRule.type = type;\n        const mediaQuery = el.querySelector('.mediaQuery').value;\n        if (mediaQuery) styleRule.mediaQuery = `(${mediaQuery})`;\n        return styleRule;\n      });\n    config.layoutStyle = layoutStyleRules;\n    // layout rules for all styles\n    const layoutRules = getLayoutRules();\n    if (Object.keys(layoutRules).length > 0) {\n      config.layoutRules = layoutRules;\n    }\n  }\n\n  return config;\n};\n","import chroma from 'chroma-js';\n\nimport createLayoutRule from '../components/layoutRule';\nimport createLayoutStyle from '../components/layoutStyle';\n\nexport default (config) => {\n  // Gallery identifier\n  const identifierTypes = ['id', 'product'];\n  const identifierType = Object.keys(config).find(key => identifierTypes.includes(key));\n  document.getElementById('gallery-identifier').value = identifierType || 'none';\n  document.getElementById('id').value = config.id || '';\n  if (config.product && config.product.split('/').length !== 2) {\n    throw new Error('Wrong format for parameter \"product\", should be \"shortId/productSku\"');\n  }\n  document.getElementById('short-id').value = config.product ? config.product.split('/')[0] : '';\n  document.getElementById('product-sku').value = config.product ? config.product.split('/')[1] : '';\n\n  // Displayed entries\n  const entryValues = ['topRanked', 'fixed'];\n  const entryValue = Object.keys(config).find(key => entryValues.includes(key));\n  document.getElementById('entries').value = entryValue || 'dynamic';\n  if (entryValue) {\n    const countInput = document.querySelector('#entries-count input');\n    countInput.value = config[entryValue];\n  }\n\n  // Include relevant product entries\n  document.getElementById('campaignOnly').checked = !config.campaignOnly;\n\n  // Sort order\n  document.getElementById('sort').value = config.sort || 'rank';\n\n  // Displayed sort controls\n  const split = config.sortDisplay ? config.sortDisplay.split(' ') : ['created', 'created-desc'];\n  const sortControls = document.querySelectorAll('#sort-controls input');\n  sortControls.forEach((checkbox) => {\n    checkbox.checked = split.includes(checkbox.name);\n  });\n\n  // Minimum entries before display\n  document.getElementById('displayMin').value = config.displayMin || '';\n\n  // Colors\n  const colors = [\n    { name: 'color', defaultValue: '#222222' },\n    { name: 'bgColor', defaultValue: '#ffffff' },\n    { name: 'thumbColor' },\n  ];\n  colors.forEach(({ name, defaultValue = '' }) => {\n    const val = config[name] || defaultValue;\n    document.getElementById(name).value = val;\n    if (val) {\n      document.getElementById(`${name}Picker`).value = chroma(val);\n    }\n  });\n\n  // Misc. display\n  const miscDisplayOptions = ['hideAttributions', 'hideDates', 'testimonialPreview', 'seamless'];\n  miscDisplayOptions.forEach((option) => {\n    document.getElementById(option).checked = config[option];\n  });\n\n  // Reset layout styles & rules\n  document.getElementById('layout-styles').innerHTML = '';\n  const tabs = document.querySelectorAll('#layout-rules .tab-content > div');\n  tabs.forEach((tab) => {\n    tab.innerHTML = '';\n  });\n\n  // Layout styles\n  const layoutStyleValue = Array.isArray(config.layoutStyle) ? 'dynamic' : config.layoutStyle;\n  document.getElementById('layoutStyle').value = layoutStyleValue || 'grid';\n  document.getElementById('default-rows').value = config.rows || '';\n  document.getElementById('default-columns').value = config.columns || '';\n  if (layoutStyleValue === 'dynamic') {\n    const wrapper = document.getElementById('layout-styles');\n    config.layoutStyle.forEach((style) => {\n      wrapper.appendChild(createLayoutStyle(style));\n    });\n  }\n\n  // Layout rules\n  if (config.layoutRules) {\n    Object.entries(config.layoutRules).forEach(([style, rules]) => {\n      rules.forEach((ruleSet) => {\n        const tab = Array.from(tabs).find(el => el.dataset.key === style);\n        if (tab) {\n          tab.appendChild(createLayoutRule(style, ruleSet));\n        }\n      });\n    });\n  }\n};\n","import json5 from 'json5';\n\nexport default (config, dev = false) => {\n  const configString = json5.stringify(config, null, 2);\n  const snippet = `\n${dev ? `\n<script>\nwindow.DuelVisionService = 'https://vision-dev.duel.me';\nwindow.DuelVisionApi = 'https://api-dev.duel.me';\n</script>\n<script async src=\"https://vision-dev.duel.me/loader.js\"></script>`\n    : '<script async src=\"https://vision.duel.me/loader.js\"></script>'}\n<script>\nwindow.DuelVision = window.DuelVision||function(o){(DuelVision.s=DuelVision.s||[]).push(o)};\nDuelVision(${configString});\n</script>\n<div id=\"duelvision-component\"></div>\n`;\n  return snippet.trim();\n};\n","import json5 from 'json5';\nimport chroma from 'chroma-js';\nimport createLayoutRule from './components/layoutRule';\nimport createLayoutStyle from './components/layoutStyle';\nimport generateConfig from './utils/generateConfig';\nimport importConfig from './utils/importConfig';\nimport createSnippet from './utils/createSnippet';\n\nconst updateGalleryIdControls = () => {\n  const select = document.getElementById('gallery-identifier');\n  const showable = Array.from(select.children)\n    .map(el => el.dataset.show)\n    .filter(id => id);\n  const toShow = select.selectedOptions && select.selectedOptions.length > 0\n    ? select.selectedOptions[0].dataset.show\n    : '';\n  showable.forEach((id) => {\n    const el = document.getElementById(id);\n    el.classList.toggle('hidden', toShow !== id);\n  });\n};\n\nconst watchColorPicker = (el) => {\n  const textField = el.querySelector('input:not([type=\"color\"])');\n  const colorField = el.querySelector('input[type=\"color\"]');\n  textField.addEventListener('input', ({ target }) => {\n    colorField.value = chroma(target.value);\n  });\n  colorField.addEventListener('input', ({ target }) => {\n    textField.value = target.value;\n  });\n  if (textField.value) {\n    colorField.value = textField.value; // text field could have a default value\n  }\n};\n\nconst watchEntriesSelect = (el) => {\n  const showCountFor = ['topRanked', 'fixed'];\n  const countInput = document.getElementById('entries-count');\n  const updateDisplay = (select) => {\n    countInput.classList.toggle('hidden', !showCountFor.includes(select.value));\n  };\n  updateDisplay(countInput);\n  el.addEventListener('change', ({ target }) => {\n    updateDisplay(target);\n  });\n};\n\nconst checkTabs = () => {\n  const layoutStyle = document.getElementById('layoutStyle');\n  const layoutRules = document.getElementById('layout-rules');\n  const tabsContainer = layoutRules.querySelector('.tabs');\n  const tabContents = layoutRules.querySelectorAll('.tab-content > div');\n  if (!layoutStyle || layoutStyle.value === 'none') {\n    layoutRules.classList.add('hidden');\n  } else if (layoutStyle.value !== 'dynamic') {\n    layoutRules.classList.remove('hidden');\n    tabsContainer.classList.add('hidden');\n    tabContents.forEach((c) => { c.classList.remove('active'); });\n    const tabContent = Array.from(tabContents).find(c => layoutStyle.value === c.dataset.key);\n    tabContent.classList.add('active');\n  } else {\n    layoutRules.classList.remove('hidden');\n    tabsContainer.classList.remove('hidden');\n  }\n};\n\nconst watchTabNavigation = () => {\n  const tabButtons = document.querySelectorAll('#layout-rules .tabs > span');\n  const tabContents = document.querySelectorAll('#layout-rules .tab-content > div');\n  tabButtons.forEach((tabButton) => {\n    tabButton.addEventListener('click', () => {\n      // remove \"active\" class from all tab buttons and contents\n      tabButtons.forEach((b) => { b.classList.remove('active'); });\n      tabContents.forEach((c) => { c.classList.remove('active'); });\n      tabButton.classList.add('active');\n      const tabContent = Array.from(tabContents).find(c => tabButton.dataset.key === c.dataset.key);\n      tabContent.classList.add('active');\n    });\n  });\n};\n\nconst updateLayoutDisplays = (select, onChange = false) => {\n  const inputs = ['rows', 'columns'];\n  if (select.selectedOptions) {\n    const toShow = select.selectedOptions[0].dataset.show.split(' ');\n    inputs.forEach((input) => {\n      const inputWrapper = document.getElementById(input);\n      inputWrapper.classList.toggle('hidden', !toShow.includes(input));\n      if (onChange) {\n        inputWrapper.querySelector('input').value = '';\n      }\n    });\n    // display layout style rules based on layout style selection\n    const layoutStyles = document.getElementById('layout-styles');\n    if (select.selectedOptions[0].value === 'dynamic') {\n      layoutStyles.parentNode.classList.remove('hidden');\n      if (layoutStyles.innerHTML === '') {\n        // insert example rule if empty\n        layoutStyles.appendChild(createLayoutStyle());\n      }\n    } else {\n      layoutStyles.parentNode.classList.add('hidden');\n    }\n  }\n};\n\nconst watchLayoutSelect = (el) => {\n  updateLayoutDisplays(el);\n  el.addEventListener('input', ({ target }) => {\n    updateLayoutDisplays(target, true);\n    checkTabs();\n  });\n};\n\nconst addImportListeners = () => {\n  const importModal = document.getElementById('import-modal');\n  document.getElementById('import-config').addEventListener('click', () => {\n    importModal.style.display = 'block';\n  });\n  document.querySelectorAll('.modal .close').forEach((closeButton) => {\n    closeButton.addEventListener('click', () => {\n      importModal.style.display = 'none';\n    });\n  });\n  importModal.addEventListener('click', ({ target }) => {\n    if (target === importModal) {\n      importModal.style.display = 'none';\n    }\n  });\n  document.querySelector('#import-modal button').addEventListener('click', () => {\n    let configString = document.querySelector('#import-modal textarea').value;\n    const errorContainer = document.querySelector('#import-modal .error');\n\n    try {\n      const matchSnippet = configString.match(new RegExp('DuelVision\\\\(({.*})\\\\)', 's'));\n      if (matchSnippet && matchSnippet.length >= 2) {\n        configString = matchSnippet[1];\n      }\n\n      const config = json5.parse(configString);\n      console.log(config);\n\n      errorContainer.style.display = 'none';\n      errorContainer.innerText = '';\n\n      importConfig(config);\n      updateGalleryIdControls();\n      updateLayoutDisplays(document.getElementById('layoutStyle'));\n      checkTabs();\n\n      importModal.style.display = 'none';\n    } catch (error) {\n      errorContainer.style.display = 'block';\n      errorContainer.innerText = `Error: ${error.message}`;\n      console.error(error);\n    }\n  });\n};\n\nconst updateConfig = () => {\n  const language = Array.from(document.getElementsByName('language'))\n    .find(el => el.checked)\n    .value;\n  const config = generateConfig();\n  const configContainer = document.getElementById('config-code');\n  if (language === 'html') {\n    configContainer.value = createSnippet(config, window.DUEL_DEV_LOADER);\n  } else if (language === 'js') {\n    configContainer.value = json5.stringify(config, null, 2);\n  } else {\n    configContainer.value = JSON.stringify(config, null, 2);\n  }\n};\n\nconst showPreview = () => {\n  // reset currently previewed gallery\n  const galleryDiv = document.getElementById('duelvision-component');\n  galleryDiv.innerHTML = '';\n  // display loader while (re-)loading the gallery\n  const loader = document.querySelector('#gallery-container .loader');\n  loader.classList.toggle('hidden', false);\n  const config = generateConfig();\n  if (!config.id && !config.product) {\n    // example gallery\n    config.id = window.DUEL_DEV_LOADER ? '5a37ad3e71fd32000475a9d0' : '5f2a823982a173002fa11f28';\n  }\n  // eslint-disable-next-line no-undef\n  DuelVision.load(config);\n\n  // the widget sends a 'ready' message once it's loaded\n  // example data of a message looks as follows:\n  // duelvision:{\"ready\":true,\"name\":\"duelvision-0\"}\n  window.addEventListener('message', ({ data }) => {\n    const marker = /^duelvision:/;\n    if (!((typeof data === 'string') && marker.test(data))) {\n      return;\n    }\n    try {\n      const dataParsed = JSON.parse(data.replace(marker, ''));\n      if (dataParsed.ready) {\n        loader.classList.toggle('hidden', true);\n      }\n    } catch (error) {\n      console.error('Failed to parse JSON data for message', data);\n    }\n  });\n};\n\nconst init = () => {\n  // add import functionality\n  addImportListeners();\n  // watch for changes to gallery identifier inputs\n  updateGalleryIdControls();\n  document.getElementById('gallery-identifier').addEventListener('input', updateGalleryIdControls);\n  // watch for color picker changes\n  const colorPickers = document.querySelectorAll('.color-picker');\n  colorPickers.forEach((picker) => {\n    watchColorPicker(picker);\n  });\n  // display count input based on selected value for \"Displayed Entries\"\n  watchEntriesSelect(document.getElementById('entries'));\n  // add layout style on click\n  document.getElementById('new-layout-style').addEventListener('click', () => {\n    document.getElementById('layout-styles').appendChild(createLayoutStyle());\n  });\n  // tab navigation\n  checkTabs();\n  watchTabNavigation();\n  // add layout rule on click\n  document.getElementById('new-layout-rule').addEventListener('click', () => {\n    const activeTab = document.querySelector('.tab-content .active');\n    activeTab.appendChild(createLayoutRule(activeTab.dataset.key));\n  });\n  // display rows/columns inputs based on selected value for \"Layout Style\"\n  watchLayoutSelect(document.getElementById('layoutStyle'));\n  // generate config code on click and update on language change\n  document.getElementById('generate-config').addEventListener('click', updateConfig);\n  Array.from(document.getElementsByName('language')).forEach((radioButton) => {\n    radioButton.addEventListener('change', updateConfig);\n  });\n  // show/update preview of gallery on click\n  const buttonIds = ['show-preview', 'refresh-preview'];\n  buttonIds.forEach((buttonId) => {\n    const button = document.getElementById(buttonId);\n    if (button) {\n      button.addEventListener('click', showPreview);\n    }\n  });\n};\n\ninit();\n"]}